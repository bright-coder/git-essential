%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 644.000000 400.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 644 400
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 644 400
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /r put
dup 35 /o put
dup 36 /j put
dup 37 /e put
dup 38 /c put
dup 39 /t put
dup 40 /space put
dup 41 /A put
dup 42 /X put
dup 43 /Y put
dup 44 /Z put
dup 45 /F put
dup 46 /a put
dup 47 /u put
dup 48 /one put
dup 49 /two put
dup 50 /three put
dup 51 /four put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00F601DC02220252027E02E603160344036E047804EA055205900630065E06B0070007360001000000150096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/A 6 def
/F 7 def
/P 8 def
/X 9 def
/Y 10 def
/Z 11 def
/a 12 def
/c 13 def
/e 14 def
/j 15 def
/o 16 def
/r 17 def
/t 18 def
/u 19 def
/uni2B91 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec

36322DA38157864F997FBF2DA982BE377049719006A1BEEE511E74F1C31E6BFB32C918FAAF4799CD75624B12A76A2DF6D539A6F63734C7062DD3134E65E6A82C848111177BC9CE7C91373AED33F20BCBE405921CA3A21F3F8FAED834CEFACABBCF961D4E9FFCA75CE85593239706FC4C248DB0D28670C304B534B16071FA7FEB1C64141EAA50C9051C3DFACF8893BB04F191705B86ACE35CC675073B76C2CA05E89CADA59671211B5649E4FA56C1029CF159EACBB6FD0C1768FD6B69EB66D5AC272BAB7FB4D9CE5EAD122E35219CCA2F0C0D77C15F35E118ACF55EA447A474F83B19DD398459647DA4EB4000F287EF98CF8F9417087295111ABFB30196605DA656B038693BF120873F80265A528CD521E416D76758BE0DF9D0D81BEC1AC6D328CFF06A6D084D5DE241323A70C0563A825025C6FE8FFB08DD7307679897545F196D9EC042A78FE8AA9F8A72C89E07FFBEF24DA336E7E63A7ADB457960663D014208A9D86C4D90F9EF51C8C58EF623F492A0230F88021A03074F8ADCB417D7C337EBB19D48521DEB006F6A032BEFEB036AE47B388A4F4297C1013188E594ADB3C69C54FD1AB832F02818B77E5D67F06BEF5647F1FC0AE0B568C7F28B014DED96DDD69DC97A8D0319CA18B075EBC280D6D3B4C676837A2895D412BABA6BD1433E82651B8044FEC36FAE05C238DB5D4DA6499691D9449223ECE201468439613E17811892B55141C99543BB241260F2079E10F4090044BA92AB27DEB336AD0910E592C50FB4B9965B028E25AC4CEFD75AB9AED18B3A7761B90DEFE08EB82CA3E05EA47E9955385C06EAA6947DC2E03DCB87CF7BB4070D6D2660CF94B13BC862905B1F8C0CE75F1A77239E48592A2E4BEBA49A13D3B3AD20B3EA16846DD03DE3F556065DB725A7B973F478D3143933E13A1515C4558373FEC784C05DC7B2B726CB77A81BBEED50E659C45D7680DD521C6FD59A7E0C0B0A763006A1083FFCEADFE37F16A902DC734055A55C7EDE17BB120F799A32D07BE9696ECBDD164C8A455071D99AB610FC09AA3B9DFD03678E0AC085117886A04D958EB587B8F1AEC3B000CD7C7FA4EB7F3AD619212C4BB84A02A6B63E6E55156DFD7C9400FAB300642ACF90653368C362938A73034D2807175190D578DA8133953C60618DA8678194B324232B9BD0E7DDFC05789BC85D822E5FBEF4FA5D2B306476C0ADE248F3BF1DAFE61D9FA535253B282B0AC782CC3CD49CD7D9946A8CDEE6DBEB399D5CBF14ECE19AB9EEBE9E1D7F4E8B932C795E2A683E60933F23DD6D2BF32CE7ACA9B4893DF664C2CD923F0F4A39432D6D21A04BB158EC8E2017D78743B36F23EA082192FACC25BCC8214DA81DC72ED47257380F253628C043B5ACE75904AC2594F405CA8CC0258C0525EF25664588583CBC921C8E07FCBA4617AAF47CB43EB8820FC2FC9BE701BE47E7
CFC04E954F5F104878C6FDA75F087A50B3ABEA3AF014787330FF3EA0393900DA3A138B0F5CAC58EF29F76C88430276B96E512A45568FC1C09B7C6099D0BBF9E464F00B31DFF569129A6C97C8FC883232B48869CC6E80677E44557ECAA6BDE3E4A2615D1ADD240255ED188B5698A69FD9D644DB9E07869BE75A6C76955272EE458DD6DCD4EA63B97452BE3F7B841E85266BBBFDBB489B21EDC8C9127D0B441B5BB7F3EAD358340BCF0F92C3103431B1542E6D0FCE1DC33364D13966658BD252D2E2CD84559EF857F69F40B65A6B1219E24CDC907F27C363BAA60EAED8266A54A94B0DE79237CC8B3E917BA498AD0F34431D0F93BF5DE577BE7BD51F7967F7630E65D6C2DB138F796DC642AEC4730BC7D40B77A2DD18E36638003B5DC653F1485AAB103F836B606700958F7FA50FB8C25A1EE9203AD8CEBE90952C2400C7C7E81D278AAECE33F08E90C552E27CA2034F2D556F9B1C25144BBACD6E4DF4DF2FF1374710D00677C956A03D66958D6C7019629D42A37E8700EB3802BB9A12E3BBBE72AB6C21AFA2106531AF979424B2EAC743087A7B183CCA458008EE5E650B417A1811AB277252D9BD6EAEA52B7808A7A2EF5179669CC2704D81C2B3CFBB5F0EB9643478CC4EB0A63E799119DFD2C155678DEE56066B33880482C2DA27E9400F339BC4905EF2C7DD861D707C39285DAD145E35BEA93644794085B2F0B8D34DC51995C627426BF86F84CD58406C703CCA995818CE3E3F6BA689688292746F07540E03A21A98A80DF952A5F647D78916FA71D75046128DA04084643B23A86449081D9DB34AD405D7605DA2F4A1E9ED6A749DED889A13E3F6FB39E0B0735F43CEE9427178DA7F86DE5299F83E2FBCB85083E0DEA97B4D2CD9BE267AAEC08C22665453B113DCA5656390F47A61D7FC270CDA6FBD36F6A2F4D33E340C8E5C83CA6469187151CBF381467D178E3883BBB66B1F96C984E2672DBE8190479773940E51ED45B29A8CED31E3E0051B03AA26F2B3D2F4845EBC7D73792B1E01B92BC0360F5B16721C074C8175F0EA93D36B4977D6DC11B1DEF577397D6C9D8FB6396EA5D866851378DD9B34611420B76E8EC510B3D5B368D8B187E6542E4F8CE42930AAF7E9B934DA282230D931B9F68012B5550EE7E6ADB82C7FD64424DE83F526394B8B3ED4291C95D005ABAB780C3C0FE79124A46F7156EC67045F6CDC1956667AF5ADB2AFA7D7DCDEE5F99E1E4469DA669AF64E83A084EEDBE0C0B44157EAD0F6A8E6FCCB8A2B7C925FE58348E0813BD183D64FCC4F3DF7EE15789DDDE63C353EB5FDCB3E59079741F05868922D902C16D7BFC25C64399DC3D128FEA17B8532B20C53A3C01D1BE65AD2A5165AF268D313FC48B47FD6398568B1E3EA5A5082BE940DA926BBF73195A0A8E84572AAE1337A1C4461F723E9FCC4EBD8F9CA1AEDAA85D28EF4756F
CF04FFF1B137F17387FC94AF4EA41872FCDBC4A2D456F6597E347DC6A0B7197E936B146F1113F4CBE06E1EEEF8F2196B9CF354787DBC2A10F9349B61F5CBE6E42D61B1695CCC2521BBDAFF9FD742D990B278A2938CCFD93C5070D79F528D131C730262FD2F9055E5CBF757078CA68CA7543CD4DC7282FFE82A6547F94562C4C77313B64AC08F57DE4CCCF0CCE1BD1574FB58D21BE798734A44EE830E847F6163193BA84BACDC665A81B038FFFD0029DE1DE6D77B800E6AF6D364309C45645F7DA0E87927A11426F35A4F8BCC3DA65B3E9B7A4B4C18F7EDA3CDFF064A6D900926C3C3AC6E92EB71B48806477BB9C785771B4B2EA64559011C9928B92D259D2DC640EB097D4FE1CE48EBDC1C3FFA295196167AB2FF703E6B8B5C298EFD9A68A5E582E5AAB94CC120263C3D0EB45DC40E3054995AB8C1CF03612D32A3C0CC7BDC0B7693F0915DC97935D1BAD4FD5667799947A034AE19E5011279939539E5D27F06D9D072CC083AF8CFBE596727C6A466D1097B2D5D85EF9D95551E7F5F8CC541B8AEFFED740591
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Deltagreek put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21FC11EB80201400F1FC01D9E1FBF1D671FBE1D671FAB27B80401B21FAA29B80401B61FA91D6C1F931EB8019AB21F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B802ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B002A019BB2254A1FBA019B0025017AB349293896B8017BB348283125B8017A403648289629482725294C1F252946272729482756C80784075B07410732072B072807260721071B071408120810080E080C080A08080807B801ACB23F1F06BB01AB003F001F01ABB308060805B801AEB23F1F04BB01AD003F001F01ADB70804080208000814B8FFE0B40000010014B801ABB41000000100B801ABB606100000010006B801ADB300000100B801AD401F04000001000410000001001002000001000200000001000002010802004A00B0018DB806008516763F183F123E113946443E113946443E113946443E113946443E113946443E11394660443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/Deltagreek 1 def
/u20B8 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F2.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 644 400 rc
-87 479 m
705 479 l
705 -306 l
-87 -306 l
h
-87 479 m
f
27.120001 380 m
97.68 380 l
106.02624 380 112.8 371.936 112.8 362 c
112.8 352.064 106.02624 344 97.68 344 c
27.120001 344 l
18.77376 344 12 352.064 12 362 c
12 371.936 18.77376 380 27.120001 380 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
114.12 99 m
184.67999 99 l
193.02625 99 199.8 107.064 199.8 117 c
199.8 126.936 193.02625 135 184.67999 135 c
114.12 135 l
105.77376 135 99 126.936 99 117 c
99 107.064 105.77376 99 114.12 99 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 62.400002 362 cm
/F1.1[ 16 0 0 -16 0 0]sf
-32.591999 5.776001 m
(!"#$%&'\(\))[ 10.368000 5.040000 9.184000 3.552000 8.592000 8.592000 5.040000 4.448000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.1 290 m
97.724998 290 l
97.724998 227 l
11.1 227 l
h
11.1 290 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
98.099998 189 m
184.72501 189 l
184.72501 252 l
98.099998 252 l
h
106.7625 189 m
106.7625 252 l
176.0625 252 m
176.0625 189 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 54.412498 258.5 cm
-4.888 5.776001 m
(*)s
/Cs1 SC
1 1 1 sc
CM
11.1 191 m
97.724998 191 l
97.724998 128 l
11.1 128 l
h
11.1 191 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
98.099998 288 m
184.72501 288 l
184.72501 351 l
98.099998 351 l
h
106.7625 288 m
106.7625 351 l
176.0625 351 m
176.0625 288 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 54.412498 159.5 cm
-5.184 5.776001 m
(+)s
/Cs1 SC
1 1 1 sc
CM
11.1 92 m
97.724998 92 l
97.724998 29 l
11.1 29 l
h
11.1 92 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
98.099998 387 m
184.72501 387 l
184.72501 450 l
98.099998 450 l
h
106.7625 387 m
106.7625 450 l
176.0625 450 m
176.0625 387 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 54.412498 60.5 cm
-4.888 5.776001 m
(,)s
/Cs1 SC
1 1 1 sc
CM
12 319.07693 m
633 319.07693 l
f
[
16
9
1
9
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
99 159.92308 m
720 159.92308 l
S
0 i
1 1 1 sc
CM
138.69231 11 m
138.69231 389 l
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
225.69231 468 m
225.69231 90 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 208.8 362 cm
-33.639999 5.776001 m
(-%.'/"%\(0)[ 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 4.448000 0.000000 ] xS
1 0 0 -1 332.79999 362 cm
-33.639999 5.776001 m
(-%.'/"%\(1)[ 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 4.448000 0.000000 ] xS
1 0 0 -1 448.79999 362 cm
-33.639999 5.776001 m
(-%.'/"%\(2)[ 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 4.448000 0.000000 ] xS
1 0 0 -1 565.79999 362 cm
-33.639999 5.776001 m
(-%.'/"%\(3)[ 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 4.448000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
165 290 m
254.71875 290 l
254.71875 224.75 l
165 224.75 l
h
165 290 m
f
[
8
4
1
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
252 189 m
341.71875 189 l
341.71875 254.25 l
252 254.25 l
h
260.97186 189 m
260.97186 254.25 l
332.74689 254.25 m
332.74689 189 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 209.85938 257.375 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.445344 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1.8906562 4.3600006 m
(*)s
/F1.1[ 10 0 0 -10 0 0]sf
7.8853436 8.3600006 m
(0)s
/Cs1 SC
1 1 1 sc
CM
519.9375 290 m
609.65625 290 l
609.65625 224.75 l
519.9375 224.75 l
h
519.9375 290 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
606.9375 189 m
696.65625 189 l
696.65625 254.25 l
606.9375 254.25 l
h
615.90936 189 m
615.90936 254.25 l
687.68439 254.25 m
687.68439 189 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 564.79688 257.375 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.445344 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1.8906562 4.3600006 m
(*)s
/F1.1[ 10 0 0 -10 0 0]sf
7.8853436 8.3600006 m
(1)s
/Cs1 SC
1 1 1 sc
CM
289.03125 192.125 m
378.75 192.125 l
378.75 126.875 l
289.03125 126.875 l
h
289.03125 192.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
376.03125 286.875 m
465.75 286.875 l
465.75 352.125 l
376.03125 352.125 l
h
385.00311 286.875 m
385.00311 352.125 l
456.77814 352.125 m
456.77814 286.875 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 333.89062 159.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.741343 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-2.1866562 4.3600006 m
(+)s
/F1.1[ 10 0 0 -10 0 0]sf
8.181344 8.3600006 m
(0)s
/Cs1 SC
1 1 1 sc
CM
519.9375 192.125 m
609.65625 192.125 l
609.65625 126.875 l
519.9375 126.875 l
h
519.9375 192.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
606.9375 286.875 m
696.65625 286.875 l
696.65625 352.125 l
606.9375 352.125 l
h
615.90936 286.875 m
615.90936 352.125 l
687.68439 352.125 m
687.68439 286.875 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 564.79688 159.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.741343 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-2.1866562 4.3600006 m
(+)s
/F1.1[ 10 0 0 -10 0 0]sf
8.181344 8.3600006 m
(1)s
/Cs1 SC
1 1 1 sc
CM
165 94.25 m
254.71875 94.25 l
254.71875 29 l
165 29 l
h
165 94.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
252 384.75 m
341.71875 384.75 l
341.71875 450 l
252 450 l
h
260.97186 384.75 m
260.97186 450 l
332.74689 450 m
332.74689 384.75 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 209.85938 61.625 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.445344 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1.8906562 4.3600006 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
7.8853436 8.3600006 m
(0)s
/Cs1 SC
1 1 1 sc
CM
289.03125 94.25 m
378.75 94.25 l
378.75 29 l
289.03125 29 l
h
289.03125 94.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
376.03125 384.75 m
465.75 384.75 l
465.75 450 l
376.03125 450 l
h
385.00311 384.75 m
385.00311 450 l
456.77814 450 m
456.77814 384.75 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 333.89062 61.625 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.445344 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1.8906562 4.3600006 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
7.8853436 8.3600006 m
(1)s
/Cs1 SC
1 1 1 sc
CM
413.0625 94.25 m
502.78125 94.25 l
502.78125 29 l
413.0625 29 l
h
413.0625 94.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -87 479 cm
500.0625 384.75 m
589.78125 384.75 l
589.78125 450 l
500.0625 450 l
h
509.03436 384.75 m
509.03436 450 l
580.80939 450 m
580.80939 384.75 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 457.92188 61.625 cm
/F2.1[ 16 0 0 -16 0 0]sf
-13.445344 4.3600006 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1.8906562 4.3600006 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
7.8853436 8.3600006 m
(2)s
[] 0 d
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -87 479 cm
185.22499 220.81708 m
241.60027 221.22508 l
S
0 i
CM
162.60007 257.71701 m
154.62198 260.77484 l
154.57857 254.77499 l
h
162.60007 257.71701 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
249.60007 221.28297 m
241.62198 218.22516 l
241.57857 224.22501 l
h
249.60007 221.28297 m
S
1 J
1 j
0.60000002 i
342.21875 221.625 m
596.53748 221.625 l
S
0 i
CM
517.53748 257.375 m
509.53751 260.375 l
509.53751 254.375 l
h
517.53748 257.375 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
604.53748 221.625 m
596.53748 218.625 l
596.53748 224.625 l
h
604.53748 221.625 m
S
1 J
1 j
0.60000002 i
185.22501 319.5 m
365.63126 319.5 l
S
0 i
CM
286.63126 159.49998 m
278.63126 162.49998 l
278.63126 156.49998 l
h
286.63126 159.49998 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
373.63126 319.5 m
365.63126 316.5 l
365.63126 322.5 l
h
373.63126 319.5 m
S
1 J
1 j
0.60000002 i
466.25 319.5 m
596.53748 319.5 l
S
0 i
CM
517.53748 159.50002 m
509.53751 162.50002 l
509.53751 156.50002 l
h
517.53748 159.50002 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
604.53748 319.5 m
596.53748 316.5 l
596.53748 322.5 l
h
604.53748 319.5 m
S
1 J
1 j
0.60000002 i
185.22499 418.18292 m
241.60027 417.77493 l
S
0 i
CM
162.60007 61.282974 m
154.57857 64.224998 l
154.62198 58.225159 l
h
162.60007 61.282974 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
249.60007 417.71701 m
241.57857 414.77499 l
241.62198 420.77484 l
h
249.60007 417.71701 m
S
1 J
1 j
0.60000002 i
342.21875 417.37497 m
365.63126 417.37497 l
S
0 i
CM
286.63126 61.625019 m
278.63126 64.625015 l
278.63126 58.625019 l
h
286.63126 61.625019 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
373.63126 417.37497 m
365.63126 414.37497 l
365.63126 420.37497 l
h
373.63126 417.37497 m
S
1 J
1 j
0.60000002 i
466.25 417.375 m
489.66251 417.375 l
S
0 i
CM
410.66251 61.625011 m
402.66251 64.625015 l
402.66251 58.625011 l
h
410.66251 61.625011 m
f
0 J
0 j
1 0 0 -1 -87 479 cm
497.66251 417.375 m
489.66251 414.375 l
489.66251 420.375 l
h
497.66251 417.375 m
S
ep
end
%%Trailer
%%EOF
