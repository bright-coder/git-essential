%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 418.000000 436.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 418 436
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 418 436
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /e put
dup 35 /r put
dup 36 /v put
dup 37 /C put
dup 38 /o put
dup 39 /m put
dup 40 /p put
dup 41 /u put
dup 42 /t put
dup 43 /A put
dup 44 /B put
dup 45 /P put
dup 46 /j put
dup 47 /c put
dup 48 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/P 5 def
/S 6 def
/c 7 def
/e 8 def
/j 9 def
/m 10 def
/o 11 def
/p 12 def
/r 13 def
/t 14 def
/u 15 def
/v 16 def
/uni2B91 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB8C06574757F39367BFF08D6528710F607E872A15AE740157C43EA8355EC809B842B0E990C72A2354701935B262A094161EA2B5CA73E941FE1313AA281508C7C6C32FACCCAA6F30FCCC6FC35282306AC34A1FEB17EEFD92417329A72C0FCF42C71832C8A0CB19B906A727C21D91F345A27B63191DD5528831A64BE4324EFA0AFD05DCCB263EDD2E74AE8CAE06EF6CB94426429CBA9FB3A0D519E0CFC5F969B260ED72537BE444BA662687FD922DC05CEC3F6EFD70C410B86E0C57A831E83355B40D4C793F2CD0EB8E61D7B685C98B46079C376DA608342406E9DF7677A3E0787BF5A74CE5E5E0126E27563771C0F44678622F3B7189A96AB3C9DAF0D4E0A09FDF08AC38A1A9E585B2B4ECA8B564F5E9595942C2DFADB6B281709E0DAA1821A92BD765BCBD5A6ED7489896D84F7C5D04C7D918F7F010D9BEBE44A4FEB99A20C870AFF2064E09992030D03A622E50FE366D6408034112DB8360DF34DAA45995C1BDF27277A55B55F8CF7092313F69BE3A68B054EB8A9258DCE7E2AD20F29EBBDF7FD0271CEC1F88A823980A10ECDF9FED6B634C7106F129E7FDCD8897C0E8B6C8B03B982DDF2DB224779F767927CA214ADEFD2F24EE9B9EDE317A4A6B53AB04C62FD251838BFD000C30BF366EEB06D299102D2F06ABEC3A962CCC72C567E37C8D5884229DA806F1F4DA52244317997A7CDED44030625DBA6BEEB2950BB9EE1C6D690344BFB
931D206C730B410376018C9ABAFC4F0402A0E49FDA55B7792E93A6155AD299F58AE0753FC1D774AE4A94899B7AF1AACC6758B1F473B0CEEDDCB211FCB8364A3A9E328DE1D1A927B7E7EF93442911D29D6CDB4C75FAA6FD0CFF0A721F54848E65BA89687D84E4F1C40DBC211D1E7E2E4F68E68E11CD926E349CD5FCC704ECB3F2099EDE59F8F52A4F3E9D0E13FBD8EECCFC3795C08E827DC9A8D9301131CF43922BD7A7589432FFCB7219A9EE49BE25AF7E8A0E2ED00B064F9284918C37BA8E3A3ACB6DD2A76149FF3D15F0FEDE50D996EC8A6CCA606D74F2B77C47E929F002FCF55689F57555989086E876012183923B86D6DC70AB57A35ABA3CB66ED43EF9C77FFEF7B2968A233038F0305ED083017C3AB95DC3B18F5FCCAE945CE859F47A6426467CEC0AA6934827F1DD9987E4FB2FF85F3A8FB4F395CE288F2ADA96EBF01181F3F6F8BC9501451E0BEFF3190DB52E433FDA78C40D12F3F1FD014D5C4C37248BD76194B3E0AAE3BCECEC60E0441F1D7EC401C01AEB79CA809D6AB02F8DA3F21B09DD2640E654AE599A7EAA20B4106516697E7ABB0ACE47B4B19F7581D64337F3A5DA4A3E1B40E7D06C853220DD1C86593A3A32DCFE528D7255DEDE01D5CF67806EFC48711E45483F6636C3308AEE1CE2C527BE9FF7DA617C5BC0864BD1D77230E73E4A4AB64ED6AA4D426434F2123FF1DC76BC2959F3DC4DC1040ACC700530BECA5A3CCFFE599AB1A70665EA78616265434AD302EF1FE4ED86A7B90DB8BBAE00BB67750F774D7807B0E0B84B352E29B00A9FBE649C57BE8B9A3EBC829FA6A617D4975FF8FBE249CE58FB47429EE8CFC3361608DC9E30ECC34CD13702EF6C873B6DA6FCB75AAF00B38C8B566D2863FACB49559DF56BC1C71C1F62DE64487A6DE503F4E360D7CC9A4F73576A422127265C26B34081C812CD45EB0818138922A61C523A4ADF6E4B02C9E8FC9562616BFB347D381F48D4ADEF6FE65EC22C111D3B8728EF2E8910D5050BD86C358FA7F9B8BC28B2C33605F4DABBFA1F97636338B04678553713BBD7B1DFA023E807BC66CA3493AC7A015CED6F63A1A19920FE92EC3DA57F46D227140191C15EAB0DC34CD6225224BF40240225EF9B6573BE4FEFE0A4A2530CD92526D312A7CB3F2FBA4A17E47D8B2209F42C2F995C295C46766335127FB172B2C56F6E4CA424B962F3A2DD6D08A449431893AA2DC72FE9F2CF388F04C153A88BA0D9A97239AE2899D9578DC4D704321C75430E5F9F972D04D8C2B469BD09478F2DA73D615D2875C6CFF1A2FBCAD026674727DA53C6BAE485F059182F5AE72A0AC7915A66EEFEA848563E2697EE60FBE6A14352AFEE5555EA8F4A60D953986B2EB9FD0C3BC959597EEC0A380A271603969325413DADF7B09FBD4EC99DAA0424091A21EF6E8971DF5065F586D6E4C617B120BD7A498B35A63554378B
A14DC2AE19F53AE95A74E2A7FCC3CF0C930926B71CB4003E04EB91A8E7F074DCC8E243FF38C2A64CA211DEB21270E428775AF820234B82EA363F3ED0B82A2E235EBE95BF2FC4F8D06898C40F0BB92C2B98FC65BD58BDBDB6766CFAF578D86334A81702329CFBD2799C639878D47D1625B1B44785D86B613EB13088C5A9F055DCC5F29E78147B1A933ED07ECAC17687205EC5C88075B74B0ABD358C7BCA2E6E7030F1739261EC5964832AEE02BAB359E9BADA98FB6F6D0675B590998B525E110191E6420CD84AF312E53A6F84902C2F6BBA28ACFBAF1951D9F4D9B91D80178A90A57D077BEF713D169F2D2A7588CA464ADB33FCABBDF0C62F44ECD95195026483EC8EC1435AFF24AC52728E360283FE6934A94AE0AB051EECA465B71F0791A9FE52479C2EDDA64CF2C1F491C7695416972678F5EF62540D7240E7612B4412DBFA096667010147B5BDDD6B5FF1F3CE8E24E6FFF49D48616B917A38B516C6A25F4E137FBDEBCB0388F382095E4046740B675BBB923EBF4C63276BAFAEFAC3E6C402A34CDF4B8EF9195B13838CB3755F96919E21D1702E1F7B30CDEBDBF9CAEF0E1F592779E1F59ABFC015976D8E4314525C979E576F9158AA27D78FC168B8A6D1303C6AD6A930436F867AE9266E85F27682ED6951B795F42EF1E2874D664D42506DD256AC87B2FAF620BE90FAD70FCB9926803BC60CED37E3D089ABB7BEDC540B724E9D5F640214BE570F732E26CDDC21E877E8901A4032F5D032F6EB5C4940724887DB1375B5091BBECD8D125777BED874710AAE7DC04AB08ED82CEAF2615590D50582E0EA39C311950238A6C63F3A4C85580A25E8A9A26B6387D1287E14EA2221D5D2C8FE72DD29240C4109882406BAA7506AE62BE25D77A96582AB918726F2E0A60B6093D131F177ABEAC106B594672EB3CEF8849870C750C6E0AFF58EE365A618D562D0D8E8F3A4E534610675E929E4FFDA9990B0D8B953C11BFAD9E34E3A6F91E009AAC02D9904B3FBC981BBDC2D915543CF9D740C6C350C1297A4B5B853F4A34E505BA31A6DAE25A498AD2C60636BF97E7057263ABA664CB45911374BF2747B8ED2993BB43A23159130B7705B687C2E5256612412555DE4CB757ABAE3805F50C6F12863881AADE0A633B1282C224E6A082DBFCE6991ECD1EF895C0E54AC952ECE5E9329A6DF8F450F73A841C2D104316139B242393E1F764A42A0BE2CD4239F0BD03B1404C8466ACA7F4D0528B040B65E7A46B29E44136F54B20B6A8F8E4E0909676B2D40E2E77A919FB02B556BDA362646CD42D3B9A4AA723A69983946A3448C0CAAB7D77C9B1AD55AC4552C66A3FB76E8707BE3F7C6790861B6B4F63AAA6961B4F622343294B0E736E1A91B606EEA78653E0B1C7605F24FCB28FFCA6826DB75965A86E0F8C566E42B5C70880A741DA673D1AA6AC17AC5E5D27CA1AAE07F
1393F47F5F4ECD909699B4595DAF4C332CF19821F1A838B8091468E065B6C3AF345208C4A491A0142089530D3ACB57D9BEA3A934925C293E2FAE6E8D6EAE1908C07253BA96FD644D4030E11F211DEAD81411DF289AA53BC7A000B5EF8D30C64CC73FE44682DC54C5DF50F51C5E9B533660637434B5D4778BBE3C28C465C179C66223C8663358C0892A33A1E8AC28C784F0E7CCEAD9825FDF10B301040B07D56DDBA3F6B895B428C0793E0277276F24018B6B3B960B161866E235ECC856D51A52BF65F373707AA951D75DB87948344AC94E7F9E373C50C69FFFAA6706FFBE092DCA53CB55907F4E88B3725AE9CC5A33F1CEE504CA78D55FE6561BCB2761155541A4CAEA6556E1E1DC90629FE595BE9703BA57DEF5ACAE09BAFF3B3FF749CCC17C44C6C9814F687BBFA52DCA466A43409364478437E9CCF99FB5E25949CA1F986087AFF3AC2AC96456705F0C105FDA8C3C328A3697E79BA1B6A5CF1F77E4AC93BFA325C23E412706CB8BC5C035C3A5AB1F8706592EF41800BE441894D12C29E64126DE66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Roboto-Regular
%!FontType1-1.0: Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /r put
dup 35 /o put
dup 36 /j put
dup 37 /e put
dup 38 /c put
dup 39 /t put
dup 40 /space put
dup 41 /Delta put
dup 42 /A put
dup 43 /one put
dup 44 /B put
dup 45 /two put
dup 46 /three put
dup 47 /H put
dup 48 /E put
dup 49 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/A 5 def
/B 6 def
/D 7 def
/E 8 def
/H 9 def
/P 10 def
/c 11 def
/e 12 def
/j 13 def
/o 14 def
/r 15 def
/t 16 def
/ogonek 17 def
/Delta 18 def
/U.smcp 19 def
/Uogonek.smcp 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4247813 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF8582693441BFA40888AF905FF75E47F70DE4CD49D4BBBBBA99C8B9C05B033FB8DE22D7D3FF19D06CB555A6AC06A365378D4943652CD0F3F51165FA5F08A351EFEDF345EDCFEF3C151F56CCA897DB8A76B981826ACAA4953845657FC886AFB7954652165B24D29CC6A5C2ABDC33FA3509F82D4E5880931B18355702DF927A4A1E5C8FC4F4E7EDA3497DBBCD67AFCB8FFE30EF9774395212587B5ABB98C35CD445CF73D94861298C5383978B23F07A813F152547C9175258395C74E457EC92F17F85C94F0DA517C0816D1AD249DF38EF57DFD104836CCAE83D1D2851C47DD17E9DEEB8526F20E6547A6F6629AD7F1EE8DA35FDF231F5AA3BB160F80E4A7FB01B48FA798593EB230FB02C03725B16E81697B8829B5924F53188ECE85986E9B934E3B1A45FDAE1C666A0AB97581322DEE7642C27AAE3874F0D3C7ADC611AE842DFF12B9508CE1DF526D9F246F0A79F331F88D52E8B6A537E878DB90FF20FAA71231AB51437DA44D497F650BEB67264BA8044C688165940F51827125AA7E1822F140C076341D75133431611C279E21C456B28ED5FCC5A9702CAB1D2FC4EB21D4C2B69D13FC2401398A25424EE4476F5CEC7BF7F998C457BB1418D1684C58EF14BFA56E5D22A581724595D0FFDF76027F0C2DCC37B47C8B764A69C091D8A87FC5E90766020FACC8084DCA7005F1AA58353FFFA682BC3D6ED939771704960BBA008E1869571B27E345399C187A7F520199B0481F2EC7AB1CAAD9F529D3C002DDB5DB2711790ABBA4FBFD8394B57183BF8EF9E336C1A6E310B46E2E
8A0DA88EF7405F3F9D398E2D5509BB0DC006FCA4A6FBEAC3C8A8983BB6F7DA458454E0354A4B6810DD1BDD5C4C70FBDACFA847CD118C9C25782EF65CEDE42AAF455DDCF1CE7863535D73C6B3A398C06CCA6395AA40F2A155C125F64191F28FEEBC0E0668EB119D1177DBA8879D527D7A5ABC4BA9356C8DA8015DD73AED299B50E685B84020845BC9106CB5D30A1B51A64D1853F14F0D00C1198BB80CBB6457E4E4646A0848929185B32DABBF24E52626FC53D06DB100A0E3548513976D1494D9BAFE7C827AC1DF663A1B4BC0D6C30FCFE83F5826E86A3F2E1A20556AA2363603A2BAAAF5449BA90F017A294AB4EEE281ADFEA9902C0DC82F5D538393BC8A4E21C06F6BA27AE0B2ACC5A499CFC355268D405FE40F87EFE74E2F7FFF041A76AB97450902BE21C40CAD9D8CA5EBE208CE590C590FBC02236EAF61792849902DB9F17F4B571E0EC19F30EF37F12419497E6A07FFC10AFF93A4A8153376BF295DB5CDC25E373C0D295982CA32B31D409D4754C8A9FA8599520AFF5B7574B5C99AC33DE70546A4AEC394CD773CB85B40D936EC9AB0AA08A0B198B5DC59953B119FB90E3E6D494E5515CBADF5515D786AEFA11FAB06EC56490C6D4A021F89F818A411DC5F2F193F521C2A5AE0B46C367F88067DE6ED9297299A38B79CBD77C9EE7A287D5A56170FFADAC48B6C9A560BA7F56FB1F373D226E6FA5C8AB344B19837A8243AE6B3EA23CF01EB4DB8E515129C85CF759EE41D2D9B1DAF391F615122DB836B3E3F52C672CCDD279467B2D4E4076B0A9F55D8D6C93C30107B244A4A16F5F6AF4545D05FEC4B06A4159894682834D9D14E080A07D92FD361CC204EC8E53F7627C58351C1C44C294DA7BE7747B1E695A341CF67923F74078D37D4F1B545A0F489669BA3CC5FE425E7561128F9794610963BAE704B0E8760DBA02DA5A1BF11839681EBE31E8531260076AE2F426DDB5D0BCBA91449365A7B02C7C1A40BFFC192F843F280CF3FC1E727B56B97732C8F1D48D6C06E6B136711696EC719BEA50EB4E834DEF4AD73D6A4DDA481DF1DB9410293B4329A04CE23B75EA389096AE45359185293941F8A86C0142EDF513D4EA0AA5BE2702152D5FCC20C20246894AECF9383C56159764A0DF07346D2F395D15A9AEE63F6B8FE5610BFF1FFD86A01FD36D73893F9BA7ADE8A5DC6190DCBF407F3313369E5D691E6168899581BC75B97E29633A696A5D84487B7BB826499E366B42FED2DCBD7B24FB76C6D2F389B8826DE1A4AEC11BE61589B90ACDE2DAD3D929C11E152D3257B91124942417FD5CD1E7777AB66E4252CFD26C7FAFEF14D1767BD9621ADA95B30DCF0F9A9E6BF662BE1CB6A43B5B986A31C0676298189BD417EE8B0A5AFAA5DD8CCDAE2AAA836F982A2B56B2ADC6D8CABFB059FB78E6C83A378716C41B6A989BBC3C6A1451C3D00D50E9D381DD3

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Regular cguidfix
/F2.1/Roboto-Regular renmfont
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Deltagreek put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020



00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/Deltagreek 1 def
/u20B8 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F3.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 418 436 rc
-250 1496 m
974 1496 l
974 -61 l
-250 -61 l
h
-250 1496 m
f
1 J
1 j
[
20
5
4
5
4
5
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
261 1278 m
657 1278 l
S
0 i
1 1 1 sc
CM
247.18373 409.18372 m
268.27213 388.09543 268.27213 353.90457 247.18373 332.81628 c
226.09543 311.72787 191.90457 311.72787 170.81627 332.81628 c
149.72787 353.90457 149.72787 388.09543 170.81627 409.18372 c
191.90457 430.27213 226.09543 430.27213 247.18373 409.18372 c
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
497.18372 1086.8163 m
518.27216 1107.9045 518.27216 1142.0955 497.18372 1163.1837 c
476.09543 1184.2721 441.90457 1184.2721 420.81628 1163.1837 c
399.72787 1142.0955 399.72787 1107.9045 420.81628 1086.8163 c
441.90457 1065.7279 476.09543 1065.7279 497.18372 1086.8163 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 209 371 cm
/F1.1[ 16 0 0 -16 0 0]sf
-23.104 5.776001 m
(!"#$"#)[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
103.18372 166.18373 m
124.27213 145.09543 124.27213 110.90457 103.18372 89.816277 c
82.095428 68.727875 47.904572 68.727875 26.816277 89.816277 c
5.7278719 110.90457 5.7278719 145.09543 26.816277 166.18373 c
47.904572 187.27213 82.095428 187.27213 103.18372 166.18373 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
353.18372 1329.8163 m
374.27213 1350.9045 374.27213 1385.0955 353.18372 1406.1837 c
332.09543 1427.2721 297.90457 1427.2721 276.81628 1406.1837 c
255.72787 1385.0955 255.72787 1350.9045 276.81628 1329.8163 c
297.90457 1308.7279 332.09543 1308.7279 353.18372 1329.8163 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 65 128 cm
-35.863998 -3.447998 m
(%&'\(\)*"#)[ 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 0.000000 ] xS
-5.184 15 m
(+)s
/Cs1 SC
1 1 1 sc
CM
391.18372 166.18373 m
412.27213 145.09543 412.27213 110.90457 391.18372 89.816277 c
370.09543 68.727875 335.90457 68.727875 314.81628 89.816277 c
293.72787 110.90457 293.72787 145.09543 314.81628 166.18373 c
335.90457 187.27213 370.09543 187.27213 391.18372 166.18373 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
641.18372 1329.8163 m
662.27216 1350.9045 662.27216 1385.0955 641.18372 1406.1837 c
620.0954 1427.2721 585.9046 1427.2721 564.81628 1406.1837 c
543.72784 1385.0955 543.72784 1350.9045 564.81628 1329.8163 c
585.9046 1308.7279 620.0954 1308.7279 641.18372 1329.8163 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 353 128 cm
-35.863998 -3.447998 m
(%&'\(\)*"#)[ 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 0.000000 ] xS
-5.776 15 m
(%)s
/Cs1 SC
1 1 1 sc
CM
247.18373 166.18373 m
268.27213 145.09543 268.27213 110.90457 247.18373 89.816277 c
226.09543 68.727875 191.90457 68.727875 170.81627 89.816277 c
149.72787 110.90457 149.72787 145.09543 170.81627 166.18373 c
191.90457 187.27213 226.09543 187.27213 247.18373 166.18373 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
497.18372 1329.8163 m
518.27216 1350.9045 518.27216 1385.0955 497.18372 1406.1837 c
476.09543 1427.2721 441.90457 1427.2721 420.81628 1406.1837 c
399.72787 1385.0955 399.72787 1350.9045 420.81628 1329.8163 c
441.90457 1308.7279 476.09543 1308.7279 497.18372 1329.8163 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 209 128 cm
-35.863998 -3.447998 m
(%&'\(\)*"#)[ 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 0.000000 ] xS
-5.48 15 m
(,)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -250 1496 cm
404.99997 1125 m
319.49561 1133.5504 307.10123 1239.5809 313.79391 1304.1752 c
S
0 i
CM
64.768494 183.88586 m
66.771378 192.1918 l
60.816082 191.46072 l
h
64.768494 183.88586 m
f
0 J
0 j
1 0 0 -1 -250 1496 cm
314.76849 1312.1141 m
316.77136 1303.8082 l
310.81607 1304.5393 l
h
314.76849 1312.1141 m
S
1 J
1 j
0.60000002 i
513 1125 m
590.3653 1133.5962 602.0473 1232.5067 602.93994 1304.1022 c
S
0 i
CM
352.98846 183.89999 m
355.93988 191.91805 l
349.93997 191.88164 l
h
352.98846 183.89999 m
f
0 J
0 j
1 0 0 -1 -250 1496 cm
602.98846 1312.1 m
605.93988 1304.0819 l
599.94 1304.1184 l
h
602.98846 1312.1 m
S
1 J
1 j
0.60000002 i
459 1179 m
459 1257.126 459 1289.8722 459 1303.5972 c
S
0 i
CM
209 184.40002 m
212 192.40002 l
206 192.40002 l
h
209 184.40002 m
f
0 J
0 j
1 0 0 -1 -250 1496 cm
459 1311.6 m
462 1303.6 l
456 1303.6 l
h
459 1311.6 m
S
1 1 1 sc
CM
169.22 335 m
239.78 335 l
248.12624 335 254.89999 326.936 254.89999 317 c
254.89999 307.064 248.12624 299 239.78 299 c
169.22 299 l
160.87376 299 154.10001 307.064 154.10001 317 c
154.10001 326.936 160.87376 335 169.22 335 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
419.22 1161 m
489.78 1161 l
498.12625 1161 504.89999 1169.064 504.89999 1179 c
504.89999 1188.936 498.12625 1197 489.78 1197 c
419.22 1197 l
410.87375 1197 404.10001 1188.936 404.10001 1179 c
404.10001 1169.064 410.87375 1161 419.22 1161 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 204.5 317 cm
-32.591999 5.776001 m
(-#&."/*0+)[ 10.368000 5.040000 9.184000 3.552000 8.592000 8.592000 5.040000 4.448000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
170.12 290 m
240.67999 290 l
249.02625 290 255.8 281.936 255.8 272 c
255.8 262.064 249.02625 254 240.67999 254 c
170.12 254 l
161.77376 254 155 262.064 155 272 c
155 281.936 161.77376 290 170.12 290 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
420.12 1206 m
490.67999 1206 l
499.02625 1206 505.79999 1214.064 505.79999 1224 c
505.79999 1233.936 499.02625 1242 490.67999 1242 c
420.12 1242 l
411.77377 1242 405 1233.936 405 1224 c
405 1214.064 411.77377 1206 420.12 1206 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 205.39999 272 cm
-32.888 5.776001 m
(-#&."/*0,)[ 10.368000 5.040000 9.184000 3.552000 8.592000 8.592000 5.040000 4.448000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
29.719999 92 m
100.28 92 l
108.62624 92 115.4 83.935997 115.4 74 c
115.4 64.064003 108.62624 56 100.28 56 c
29.719999 56 l
21.37376 56 14.6 64.064003 14.6 74 c
14.6 83.935997 21.37376 92 29.719999 92 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
279.72 1404 m
350.28 1404 l
358.62625 1404 365.39999 1412.064 365.39999 1422 c
365.39999 1431.936 358.62625 1440 350.28 1440 c
279.72 1440 l
271.37375 1440 264.60001 1431.936 264.60001 1422 c
264.60001 1412.064 271.37375 1404 279.72 1404 c
S
0 i
1 0 0 -1 65 74 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.442383 -6 m
(!"#$%&'\()[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 0.000000 ] xS
/Cs2 SC
0 sc
-12.292969 13 m
(\))s
/Cs1 SC
0 0 0 sc
-2.4013672 13 m
(*)s
/F2.1[ 10 0 0 -10 0 0]sf
6.6630859 18 m
(+)s
1 1 1 sc
CM
317.72 92 m
388.28 92 l
396.62625 92 403.39999 83.935997 403.39999 74 c
403.39999 64.064003 396.62625 56 388.28 56 c
317.72 56 l
309.37375 56 302.60001 64.064003 302.60001 74 c
302.60001 83.935997 309.37375 92 317.72 92 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
567.71997 1404 m
638.28003 1404 l
646.62622 1404 653.40002 1412.064 653.40002 1422 c
653.40002 1431.936 646.62622 1440 638.28003 1440 c
567.71997 1440 l
559.37378 1440 552.59998 1431.936 552.59998 1422 c
552.59998 1412.064 559.37378 1404 567.71997 1404 c
S
0 i
1 0 0 -1 353 74 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.442383 -4 m
(!"#$%&'\()[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 0.000000 ] xS
/Cs2 SC
0 sc
/F3.1[ 16 0 0 -16 0 0]sf
-13.066406 15 m
(!)s
/Cs1 SC
0 0 0 sc
/F2.1[ 14 0 0 -14 0 0]sf
-1.5117188 15 m
(,)s
/F2.1[ 10 0 0 -10 0 0]sf
7.4365234 15 m
(+)s
1 1 1 sc
CM
173.72 92 m
244.28 92 l
252.62624 92 259.39999 83.935997 259.39999 74 c
259.39999 64.064003 252.62624 56 244.28 56 c
173.72 56 l
165.37376 56 158.60001 64.064003 158.60001 74 c
158.60001 83.935997 165.37376 92 173.72 92 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
423.72 1404 m
494.28 1404 l
502.62625 1404 509.39999 1412.064 509.39999 1422 c
509.39999 1431.936 502.62625 1440 494.28 1440 c
423.72 1440 l
415.37375 1440 408.60001 1431.936 408.60001 1422 c
408.60001 1412.064 415.37375 1404 423.72 1404 c
S
0 i
1 0 0 -1 209 74 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.442383 -4 m
(!"#$%&'\()[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 0.000000 ] xS
/Cs2 SC
0 sc
/F3.1[ 16 0 0 -16 0 0]sf
-13.124512 15 m
(!)s
/Cs1 SC
0 0 0 sc
/F2.1[ 14 0 0 -14 0 0]sf
-1.5698242 15 m
(*)s
/F2.1[ 10 0 0 -10 0 0]sf
7.4946289 15 m
(-)s
1 1 1 sc
CM
174.62 47 m
245.17999 47 l
253.52625 47 260.29999 38.936001 260.29999 29 c
260.29999 19.063999 253.52625 11 245.17999 11 c
174.62 11 l
166.27376 11 159.5 19.063999 159.5 29 c
159.5 38.936001 166.27376 47 174.62 47 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -250 1496 cm
424.62 1449 m
495.17999 1449 l
503.52625 1449 510.29999 1457.064 510.29999 1467 c
510.29999 1476.936 503.52625 1485 495.17999 1485 c
424.62 1485 l
416.27377 1485 409.5 1476.936 409.5 1467 c
409.5 1457.064 416.27377 1449 424.62 1449 c
S
0 i
1 0 0 -1 209.89999 29 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.442383 -4 m
(!"#$%&'\()[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 0.000000 ] xS
/Cs2 SC
0 sc
/F3.1[ 16 0 0 -16 0 0]sf
-13.066406 15 m
(!)s
/Cs1 SC
0 0 0 sc
/F2.1[ 14 0 0 -14 0 0]sf
-1.5117188 15 m
(,)s
/F2.1[ 10 0 0 -10 0 0]sf
7.4365234 15 m
(.)s
/Cs2 SC
0 sc
1 0 0 -1 379.5 291.5 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.439941 3.5 m
(\))s
/Cs1 SC
0 0 0 sc
-12.54834 3.5 m
(,)s
/F2.1[ 10 0 0 -10 0 0]sf
-3.6000977 8.5 m
(/0*1)[ 7.133789 5.844727 6.474609 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 242.96477 237.5 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.439941 3.5 m
(\))s
/Cs1 SC
0 0 0 sc
-12.54834 3.5 m
(,)s
/F2.1[ 10 0 0 -10 0 0]sf
-3.6000977 8.5 m
(/0*1)[ 7.133789 5.844727 6.474609 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 178.98846 237.5 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.498047 3.5 m
(\))s
/Cs1 SC
0 0 0 sc
-12.606445 3.5 m
(*)s
/F2.1[ 10 0 0 -10 0 0]sf
-3.5419922 8.5 m
(/0*1)[ 7.133789 5.844727 6.474609 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 38.5 291.5 cm
/F2.1[ 14 0 0 -14 0 0]sf
-22.498047 3.5 m
(\))s
/Cs1 SC
0 0 0 sc
-12.606445 3.5 m
(*)s
/F2.1[ 10 0 0 -10 0 0]sf
-3.5419922 8.5 m
(/0*1)[ 7.133789 5.844727 6.474609 0.000000 ] xS
ep
end
%%Trailer
%%EOF
