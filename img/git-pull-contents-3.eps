%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 382.000000 247.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 382 247
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 382 247
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /o put
dup 35 /m put
dup 36 /p put
dup 37 /u put
dup 38 /t put
dup 39 /e put
dup 40 /r put
dup 41 /A put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/A 1 def
/C 2 def
/e 3 def
/m 4 def
/o 5 def
/p 6 def
/r 7 def
/t 8 def
/u 9 def
/uni2B91 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec

887476E052965D209BFD9DDFB802C652F0D2AD8C9CD80C830BFA3F4DECA07944AB00010EB08BB33D6C5AC9729E8A08CEF56B3599C7C5CD4A02076492DAECD86F5A6A6EB6CE285D4B7DFF719C8609E8365DD48CDB3F446EC906BE1710B0CFAF0B4FC46871FF5A786868A4744C14AA6E9EB2FDC5B76B98146785C4543ECC19DD1655F0322B1A171274AD2543C39173C7E80F2429170E389989D68B1240938C6A698496101661293B7AAD931112E49A88FA423A43DF59453CD023C372ED2FF284207515448DA1D568D27FF4AC395AB8654007D7C817E9A74DEDCF401797A1F65072A838283FF73F08019C4E688F8F902B750C1DF53E735FA0DE034CB0657A3B6B291D52773DCDAF2E4449BF26133B8424B64D3ED74BD682F5764AE1AD145669C9F873F97A4A9064277A9A952E99A304EC58572140866779861D07C33F649EF201FA106A28F98F311138E402E1EA3DEA7173FC1AB3EB8A22C9C77B9A7E188C41AB91C48A1A1EB66C2838805E7C3B4EAB84BF9166CE2948889460B533C3A000C027A161B22D3540456BC8E4680A98582BDABD93E4518FCA181D256A3AC06B86546F0D4435484F4F6D7959B1BFB4738E90B2DAAE33860EC14D3D3D5CDEB23E7CFBAB2ACC4955E4E7AC00C79D6CCB0E92F2C310485F1B2C5A7E97DD30F5343B9DEA89D221B156FB1CC0AB6D7707B507E641E70DDE7DFD7B050E268EBA586A994FAD38E0D8D79E585B466A2AA1B6941C589AE80D120CDE11E9A0DA6E35684CAF499D73ED3FB056A8641539723AAEADF00CF5AE1FB444AC37E9345AABCC72C3527FCD15725F087D232FD898BA867FFE90E02619F4FD4C8B9250C1EAB210926189EB30A31503C83DE39DF1DA20F9B644CDB95788376928F8702FC2677F9AE8D8051AEBE6E2BA16D75D51AB662EE41BCCF555DF443FF831D65B2A3A65AE7A5F80E0F8BD18726C4F21436E81F8F3FABE13E0D845592A7856D69522DA9FDF4F941B9EDDCEA0E0141CBF65FF1AB10248C84F2B66E615C1083B5665A9F4D1E69BA70FCC73BE3A5E59ABED4EE4D05196003F2EB23D5C7A51AD477FD30323E7D42A681FE314A05F420EE194D63DB38B29A8368EE1D6D2452EE729D64CE5AE4D20B83A1B83E42C757C5FCA25502063A45F49FE68BF622BF55C07D384623FDB3F644E1F04886D5EE0643BB40630D192C1E3F0A3D860635AEC27844E5E18644D66216ED941A8B1B026E7BE47648FA512A8AE2A2C9731F2231398218223DDEFB2859CB72ABAA4303C275BB317B5F5F59FC6C74BB77007416FCB74ACC736AB90BC6F7C92C692D7D5C21BB60582E6345709C7E9A8A652B14CD6EA5252C215E4533557609AC3822B1B889685709B1962C99CFBBFEFE8264C86DB599620657C2A230C81FB3CDD068EAE1C5F8018C550E169EE9DED54A57E49A657C113EB2206660C6732EA439BC649C6CEB0D5
1172A779BE6C4D01D210E9809404A69C2843D45E1AAE284C6BE1980A80F3A473DC214B2E00604FF860E5C077252D6BF29A6AFEF2F3965D180D667494C9CDC74DF8C567BFFA0B39582D37C377CDCF0AE57E72DB901A827C4BAD0E1618FADA88FD7EF768C2B71DA6F65B8D763CCB01B2DB02D03EED58E0C07D920874DDC847F4D15E546F5B9D84D5FF1E147FDB8F80436D1DB0C811DA043FBD252835E40322B78928D2970769A3B314080BF06F52F4751360DBF90F96CF34BB74FBAE6BFA4A8544C7ACA1B8557BD8E40A84018A17A0C306202AC878DDC5F90347555300A65A7310DD3BDAEF4ED5ABE7DBEA862F49414F739301F50AF6E1A0A11AA8F939BE7E64509DBB601C85D7BC90E633D6D581EE33C7067BD22ED740B4F958DB83FAD8EE9153D039BFB47B3579B58FB12D72ADAA890851375EF1D5C5C9C57DE6E91A10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Roboto-Regular
%!FontType1-1.0: Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /r put
dup 35 /o put
dup 36 /j put
dup 37 /e put
dup 38 /c put
dup 39 /t put
dup 40 /space put
dup 41 /Delta put
dup 42 /A put
dup 43 /one put
dup 44 /p put
dup 45 /u put
dup 46 /b put
dup 47 /l put
dup 48 /i put
dup 49 /s put
dup 50 /a put
dup 51 /v put
dup 52 /d put
dup 53 /m put
dup 54 /n put
dup 55 /parenleft put
dup 56 /parenright put
dup 57 /braceleft put
dup 58 /h put
dup 59 /B put
dup 60 /semicolon put
dup 61 /braceright put
dup 62 /H put
dup 63 /E put
dup 64 /D put
dup 65 /C put
dup 66 /f put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000306670676D00000000000000CC000001BC676C79660000000000000288000014246865616400000000000016AC000000366868656100000000000016E400000024686D74780000000000001708000000A06C6F636100000000000017A8000000526D61787000000000000017FC0000002070726570000000000000181C0000019C002A007A009B00A600CC008C00000015FE600015043A001405B00015048D00100321000B063500250722001500000000B0002C4BB0095058B101018E59B801FF85B0841DB109035F5E2DB0012C2020456944B001602DB0022CB0012A212DB0032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB0042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB0052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB0062C2020456944B001602020457D691844B001602DB0072CB0062A2DB0082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB0092C4B535845441B2121592DB00A2CB016452DB00B2CB017452DB00C2CB1270188208A5358B94000040063B80800885458B9001603E870591BB0235358B02088B810005458B9001603E8705959592DB00D2CB04088B820005A58B11700441BB9001703E844592D00010084FE31029D06640011000900B0032FB00D2F303113100037171706021115101217072326001184013EAF062689CBCA8A2606AFFEC2024F018A022E5D01746BFE28FEA50DFEA5FE28746C5D022D018B000000010006FE31021F06640011000900B00D2FB0032F3031011000072327361211351002273733160011021FFEC1AE062687CDD3812606AE013F0246FE75FDD35D6C6901E1015D0D015601E36E6C5DFDD2FE76000000010030FEFE013B00DD0005001000B0042FB001B00A2B58D81BDC593031250323133533013B967546C530FECE013CA3000100A10000016600CA0003001C00B0004558B0002F1BB100063E59B10204B00A2B5821D81BF4593031212335330166C5C5CA00000100BA000002A905B00005003600B0004558B0052F1BB1050C3E59B0004558B0002F1BB100063E59B00510B004B00A2B58D81BDC59B10302B00A2B5821D81BF459303121231105352502A9C5FED601EF04F0048E360000FFFF0063FEFE016E0436002700050001036C0106


21071616333236371706060322060717213534260250E2FEF50113BCDBE0FD42030398896497374D3ABEA5638C100201F37C15012DF02CE70133FEF8DC7B059CC9393280394C03C8A77E051A749C000000010038000002C9062D0017005900B0082FB0004558B0032F1BB1030A3E59B0004558B0132F1BB1130A3E59B0004558B0002F1BB100063E59B00310B10102B00A2B5821D81BF459B22F08015DB00810B10F02B00A2B5821D81BF459B00110B015D0B016D03031331123353335343633321617072626232206151533152311E1A9A9B5A222452A1812331C5654E1E103A89289ADBD0B0A96040667628992FC580001008F0000040006180013004100B0132FB0004558B0032F1BB1030A3E59B0004558B0072F1BB107063E59B0004558B0102F1BB110063E59B00310B10C02B00A2B5821D81BF459B22F13015D30310136363332161511231134262322060711231133015438A363ADC1C5737252852BC5C503A94E57D0D8FD5A02A886804D42FCE106180002009F00000164061800030007003600B0004558B0022F1BB1020A3E59B0004558B0002F1BB100063E59B00210B005B00A2B58D81BDC59B10604B00A2B5821D81BF459303121231133112335330164C5C5C5C5043A0115C90000000002FFBEFE4B01720618000F0013004C00B0004558B0002F1BB1000A3E59B0004558B0042F1BB104083E59B10B03B00A2B5821D81BF459B00010B010B00A2B58D81BDC59B280100171B22010015DB11304B00A2B5821D81BF459303101111406232226273716163332363511132335330172AC991F331D0E0E3411414DBFC5C5043AFB6DA7B509099B0507586304930119C500000001009F0000016406180003001800B0022FB0004558B0002F1BB100063E59B22F02015D3031212311330164C5C506180001008F0000066F044E0023006F00B0004558B0042F1BB1040A3E59B0004558B00A2F1BB10A0A3E59B0004558B0232F1BB1230A3E59B0004558B00E2F1BB10E063E59B0004558B0182F1BB118063E59B0004558B0212F1BB121063E59B00A10B11302B00A2B5821D81BF459B00410B11D02B00A2B5821D81BF4593031011736363332161736363332161511231134262322060715112311342623220607112311013F0E35A36C6C9B2733A870A5C0C56E6D657D0BC6716A5A741FC5043A8E4D5564645C6CE3E4FD790289A0858C6B08FD510289988D4A43FCDF043A0001008F000003FD044E0013004600B0004558B0042F1BB1040A3E59B0004558B0002F1BB1000A3E59B0004558B0082F1BB108063E59B0004558B0112F1BB111063E59B00410B10D02B00A2B5821D81BF45930310117363633321615112311342623220607112311013F0E36A368AFC0C57174558327C5043AA1565FCDD6FD5502A78F785247FCEB043A000000020061



00>] def
/CharStrings 40 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/period 5 def
/one 6 def
/semicolon 7 def
/A 8 def
/B 9 def
/C 10 def
/D 11 def
/E 12 def
/H 13 def
/P 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/f 20 def
/h 21 def
/i 22 def
/j 23 def
/l 24 def
/m 25 def
/n 26 def
/o 27 def
/p 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/v 33 def
/braceleft 34 def
/braceright 35 def
/ogonek 36 def
/Delta 37 def
/U.smcp 38 def
/Uogonek.smcp 39 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4247813 def
currentdict currentfile eexec



9C0B68ED941F5E9C1D5B232C7872173819BAD6D4635AE81BF0FE9E74A25BF67E466AD10EB97416F4FB95FE19EC2E852C0A1B708F0757351CE224DDBEAB775A71BB106396FB5E4904C8831A385A0EBC3D168365D0DCCC08C962AB6F9DDBE1733C27999A2079D0640C4800E2C32F0C96B4C4F81B0A43D581AB796A13C61249420AC47500E012B278DD1D5BE6978282D616569D03284D2D96E20CD12B3167E8F541DB7A6BFD36137441DE593A906DF9EE09BF0F0CC55AF1AF8AD94E470314FF4BFC0C4BDB268E04E58037E018153C5AA50A8B047955FB76327B1EC1067A3D2F23EEE2044447864572CAEE0D9924ED6E6CAD4DC9F046EBF764CF5CE7FAAE1AB340BD28BBAC0C6785CD5B6786276EF3CB33AA353163344B32464E1D26F664B260021812A58102C5805577C7ADCB0A8BE3EC6111154AD5A6AD8352A1DF83BF6E73BAA69CC6F611CE0D2D33DE66E1F13276E0B8812F24CE4F01FDAEBC99D7090E2613EB57DDB01EE85C1126246951F5997316711A585C3C0B1C43E5B82245524083F3D6D73DBAF9A94BCC0A5AF11A6F277FE9A8F497617F4CF0721458E9B67E3A47519DC02137D7974688FC2B6D44E91F0D05C75AA7BB773339F4136F477EF701A7720676D52EA1175566368E07E385983B3420568CB57C0CF6FC0A11A0AC1B70E48E93BAD543FA086ED24FFC0B5C98694F259D29C60D11B3F7546A8A8A7ED8A27AFD628E7D2576A07FDD4DE4F717DD63270C544E83B990A281879A48F4A988DF800121060F71B55A5B76B345E4312BBDCE38430A02A97DE814177AE1F40498B9A2C7EC82D4F3F5496D7A74D0757CDEDCC90503C5236A218BA7421AC56A458D045D4ED82A93D48DAC530894487849252A6E4659775D05827CABA68D2961F428CB9230A9CC1F5C78ADB8712F2098D942F0A89B0518B091F33E2CE93CF3153565D05D370F54F59DF3594A085845E6719CFD0BFC0A2EE435CAF869BF5BDE0A1A8C5C0207F88CC0931AEBC0CC27B0BCFFD7A352177911A3B9E7A742F9596877D9627C28F652956E190B1747AE6D50FABA5DD9D0ABC38D87C6C0C00BE724AAF56C7BE21EFF259838409121BC92295B3CE140F834634C9B0CC05DDA751A295BA214B9159FE4F2A92422D8EBE357FA3B9B621C97CCB6C1E9C23CB5C2092D3C2B3E953E06B32E0DE309A4557C8DF50C89353FC01DCAD51127EFD8D6E763C61CF701D5C20102BA8F63276A2C8BFFF87018EAB4B3C38D929EBD79E9B6CA53A4424FDD5A370A65F7665E3B576DD049F8D178E8D0906534DE3873F1D7F8472608243E88AFC285FFEBDAB161A3D16FF35C556489CF4B0D95C7CA9D7760770828C45810624E8D31A51D2ED86FD4EC80B41FC496A4ED9ECAFA9F47C5F08DE750C9B5DBC7387B83D81142F57106AB592D2ED683FA0FE21CF1D36F3C1C3B174533484B2A7710FF18822CCD3E
293CFDC33B94FDB97F026D87E262E572FFBE5F6E011D4159A293EC5B27DDAA0493959E2ADAD7A1B579F2A0DD640A8A0893186F6324BEC4410FE86742CB6D3EDC156EE9166AEB41E38A543D098A092AA142A2B7BDF87AEE0D09C9C42D897544E1781C65875FA11255EF13337AD0967C0E9A87DB3332E457977F0DA488E44E5300D568EE71EEF1402C451B5227686DBFB6940BF6758AAA6FE6715D15E2B5FB054837FBA07F09D1510979869164F181E6CCEDEB227FFEAEC5D3F58B5AAB081D67DD8C2A0EDA44F9B917406231FCB50C7B1FAA8B2B23C528F69E73D5E4EA4FCBF47160EC2173F64C6A4BEFD770EB8FB0809C141E479128043956887CC829417819E96C20326ACF6F39A527FFEF295BBDC66009A209DD6E01C4EE6A45A180D28472C15B8E55EA8F433E29276CF1CCF414390146EB496B9EF427EB1401A39773EFB1F41877FA1BBFD3AB28DEFFECF12CCCE8583D3D0FF9A85AAB046F86D00919BB0A6C7D3258DA3009D1F79F26E21F281DC1556468C6A6AFFB082439D6E1E3A00BE7C08A00C2D94A0BB89C0C090B27868DABAFAC2B0033A7C2DA88EEF4B76F22B378CF9934FF9F455ECB264C9022D4436D2705468529CEB169E35EB8F4D524EA22289AE31BDB8C1602AF03FF9E71ADB2C25AEBF069D8D56A818BF5B7431A47B8081985E970A1174BB2C6D795B04140665CB87CBE9AE98B471C97A3CDE493516D3D22E5871D1E25199C2F48982B10BF3CFBAA9A2AD242BFE70EBD2E1099EA6E309B6610AF7A27D065A6A6CDB1DCC08F39AE0202AB92928E4DAF296430F96B7B99893F4003B3BF9C5E833EE47D7C3B948D849CE9948145F5F600AD6C78294D900FCE0AC350647FC74DF4B8625417D8EF3B258EAABF6B553FF718CE9889B637F83B59BB4A0843049A14DD93ED935CA5F5A34AA690823474518B9B69CBD344F6F90B83A600D8972BC3F4195192A28DF67A2C54936DF96C8C00E9094767C2288E99874367034CBEBC9756AD05AF9CF7A57FB21A8F44EBDF6165414B1DAB4E973DDA0FE1B61BAC4247AFF69ECFBAEE3194B5D8A12DBDB65944D2708635E45611A55BE6172732E7146E8624B5E72CBC074CED04206282E6EEAB4B597B82E22774AD7E35516B8DB94736B444C3F5CAE8873993FBC5F4CD6318DEF0DC2AE68BA3BFB43C92806CCA835AD794852735EBAA11FC77275DF5BF11C02A552E59BC2DC9065A0CDF586F65973058D5ECA8D2BECD7F1DC96C37EA3506905D0E1CA3542DEA50F3C8F469DF1170C7E7F5CA80238C4435AAA827AA66B82E4A36E0B11CD2FCDE4DF5D9E22E7DC9BD39512D1466E15157D200EFF3C6F0C0A854274C85910853FA126404E27AFA55A126ECE6AC83AD4E072F886CFE18FF222997A90B412A8B76E0E1B792DBCBF5A4A71ACCEABD6A8E73A392B6D59166945877FE1AD3E52E52B3FD7C5EB715359128
24A44F83E184C24FC7528B4880790C042CA5927BAEA6FB21AADCE876F1445454BC3F591C6CEF16C46AF6959671423150E08CFBF03AFA35EE74D119EC2CE762A4AB09A6C4C915CEFF0E1AED39BAFB37173B4593A989D697B9CA79095185D50AF8F52D6AA1AF3716B171F64E3A20E24B6AAD4D2A6B40EFE99CCDEC514599F062BF3FEB197EF613BB81D81840F84B7C6703D1B6A4EBBC830AFE9CB09C00999A6CCC4847A7B09098DCC88034718F00447609736C64BFF62DAC6318CCF3A2232D42BC1BA1A2BC9593AB17B59352BCC5A0D28E57B330D863796F015A8CCA54DE13CCE2A89D1E5A3CE7A2284C8C7FCD4E531B96F513A08EAA73D9D40819F7ECE2729801D2967CEA51DA76E8638634BD2C71357DF171B4DE4243362BDBC246B6567BCDEF4463F38D3819
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Regular cguidfix
/F2.1/Roboto-Regular renmfont
%RBIBeginFontSubset: Roboto-Bold
%!FontType1-1.0: Roboto-Bold 1.0000.1.0000
14 dict begin/FontName /Roboto-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /plus put
dup 34 /hyphen put
dup 35 /m put
dup 36 /e put
dup 37 /t put
dup 38 /h put
dup 39 /o put
dup 40 /d put
dup 41 /A put
dup 42 /parenleft put
dup 43 /parenright put
dup 44 /semicolon put
dup 45 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1035 1 index div -555 2 index div 2440 3 index div 2172 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/plus 3 def
/comma 4 def
/hyphen 5 def
/period 6 def
/semicolon 7 def
/A 8 def
/C 9 def
/d 10 def
/e 11 def
/h 12 def
/m 13 def
/o 14 def
/t 15 def
/macron 16 def
/uni0423 17 def
/uni04EE 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1035 -555 2440 2172}def
/UniqueID 4052120 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55432D4F3B2AF89AB3F665ECA680A77DBB6E0109F23D6E5B85C13CA122379A8A1D2140D06D86993190FAD45374C7C742978C4706FCAD3736D24A0610C5621C9D7039E63654547C30463D3EBC0BED4960FB8D78E64A06A1A554E036571D1907465321091BC5B3216B71A765B6D1BCB96092BA274823D42D94A39B29A38AC74A966797292C549802208754ABD6699CEF70F773E4BBABA611A6C47AA43FDEF5B54FC1964FB23150F58E01D19EB63F6BD9B60E17D5ED15B962FB05A44CBBD9117F6D506235905476B39113F1C576A1A8F81487EE949E14DD03F3FD4D17F1C3B248E0D2541FA43E41730C62094252D2D22C1429222F7BB30AA2A76264D0072D6FF936AC9286F9AE927A40CB316E73B4978B26A329058B119917603782471D4A38118BBEFE6EC689DB8622DC33F78091B2A0C732AB73AC657C6E8D6A897FE83612392A4604E38FA2DE6D6C6B4D4D3C3BC274A808FBD3CE7A0C08928BFBF1B8F216EE3AC3EC3B6D27BEB090B0459EFBBA201571A8A310EDB3F9DF3193FD68B48E45638F418D1200A838F17B4986237E33A8256EBA53D41F1BE793362270E64C1EFCC5C8AAF656590E7022FE85EA5D9D44895C0AF99CA849C87F23467D39A3D7EEC6A4210A1CDFD2DC37DFDC27AC6D3CDCC5ACE41533D33E8415CCC86B5ABDAB0663395F99C52F51D8EAF32DD53870DBE06BB509604B9ABE869EAF94C8501E001365E4C8EA3731B7990B94621411A41C8A54CE11426A98E24B65844E674840CFABD435C14A44CE7CCB6D71A9EBF729D3F8897248DA11F4135F0E8B67387C7C105E6958A0DACFE5D

2468CF475C8020EFE1B295780DAE5BF0FAF7DE494C4EC2F5E6BE688A688AD93110F725B0FBFB333A9F47D11DD5C1D58752B9120E1A04B6B9649A65AAE4322B3A72A36F68CC2E4CC6DA0F4DB754ABB1D2E23EDBD8B052F341FD341FBF039A432753DF79B138D4CA66E1A662B4D986D3E21ADC02FE67FB7663BD81D4969D37A199729DD9E82085DCF4F6AD6BC2067218450D9C48409224ACCE44B34C998601407F6590DAA8E6388AA0AE06CABB60498913EFDF2E41AF61E580882700A35C3EA376701AD30C8CE7533FE07EF7E1CCD147C1FDBF84C731635F9E51CE460D459D334227775559E1BE1ACB651D027769F08226C308705E425815C2C0954C523AE223EDD24151B26855F017B5AE03953DACF0CA636D82265AB554FC86B3863D793F8066BB3AA21D0AC18008B5F48AE928636BDDE3EB5F497DE603F315BA7CBDAE775DBBB5E0A7564ECBBE447C819DAEFA505A35C40523B05E5BB0959E170EB218A1E7395D5C90F628368C0D8805A0806C4743AF3219114A16B9C62F07E18B5B294E6907102DFA5654118D591C3B022CF4AEE273684CA123E9D501E95DB743DB00953B8BDEA7FAED26E10DDD17E9DEEB983548B925C6748DDB966749691B66F7858984E5C3891023D90BD8D3ADF0B7690CD779DE71595E31E52EB40E72C3EC11E6F87A674D5634A75567A02F6E942157E0AA14A95E214D22DF6A893D5FB9EC096F1B12C16690CAC1D903FEFB3E1F712FF0DE51ACD8F60CE5EA9801F42D0CDCE8164173EF6CA730ABB1E85D82F8D4A872D10F9CE807391C92AA674A3831B6C49103F9493B014332540CF3AA1E99305FDF2C36084F0ABF87B34F8BBEC735FB9F16E08C3B1C5F83D6B6BD0B50089286A775F930CA98835FF24FE3CA1AB22A7F4E371CCB26438E2E673D8040ABD8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Bold cguidfix
/F3.1/Roboto-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 382 247 rc
-1141 830 m
443 830 l
443 -727 l
-1141 -727 l
h
-1141 830 m
f
103.18372 220.18373 m
124.27213 199.09543 124.27213 164.90457 103.18372 143.81627 c
82.095428 122.72787 47.904572 122.72787 26.816277 143.81627 c
5.7278719 164.90457 5.7278719 199.09543 26.816277 220.18373 c
47.904572 241.27213 82.095428 241.27213 103.18372 220.18373 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1244.1837 609.81628 m
1265.2721 630.9046 1265.2721 665.0954 1244.1837 686.18372 c
1223.0955 707.27216 1188.9045 707.27216 1167.8163 686.18372 c
1146.7279 665.0954 1146.7279 630.9046 1167.8163 609.81628 c
1188.9045 588.72784 1223.0955 588.72784 1244.1837 609.81628 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 65 182 cm
/F1.1[ 16 0 0 -16 0 0]sf
-35.863998 -3.447998 m
(!"#$%&'\()[ 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 0.000000 ] xS
-5.184 15 m
(\))s
/Cs1 SC
1 1 1 sc
CM
21.125 155 m
152.75 155 l
162.875 155 162.875 155 162.875 146 c
162.875 150.5 l
167.9375 150.5 167.9375 150.5 167.9375 141.5 c
167.9375 146 l
173 146 173 146 173 137 c
173 20 l
173 11 173 11 162.875 11 c
31.25 11 l
21.125 11 21.125 11 21.125 15.5 c
16.0625 15.5 16.0625 15.5 16.0625 20 c
11 20 11 20 11 29 c
11 146 l
11 155 11 155 21.125 155 c
h
21.125 155 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1162.125 675 m
1293.75 675 l
1303.875 675 1303.875 675 1303.875 684 c
1303.875 801 l
1303.875 810 1303.875 810 1293.75 810 c
1162.125 810 l
1152 810 1152 810 1152 801 c
1152 684 l
1152 675 1152 675 1162.125 675 c
1303.875 679.5 m
1308.9375 679.5 1308.9375 679.5 1308.9375 688.5 c
1308.9375 810 l
1308.9375 814.5 1308.9375 814.5 1298.8125 814.5 c
1167.1875 814.5 l
1157.0625 814.5 1157.0625 814.5 1157.0625 810 c
1308.9375 684 m
1314 684 1314 684 1314 693 c
1314 810 l
1314 819 1314 819 1303.875 819 c
1172.25 819 l
1162.125 819 1162.125 819 1162.125 814.5 c
S
0 i
1 0 0 -1 92 83 cm
/F2.1[ 14 0 0 -14 0 0]sf
-72.760002 -49.119999 m
(!"#$%&'\()[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 0.000000 ] xS
/Cs2 SC
0 sc
-24.395742 -49.119999 m
(\))s
/Cs1 SC
0 0 0 sc
-14.504141 -49.119999 m
(*)s
/F2.1[ 10 0 0 -10 0 0]sf
-5.4396877 -44.119999 m
(+)s
1 1 1 sc
CM
38 119 m
137 119 l
141.97057 119 146 114.97057 146 110 c
146 56 l
146 51.029438 141.97057 47 137 47 c
38 47 l
33.029438 47 29 51.029438 29 56 c
29 110 l
29 114.97057 33.029438 119 38 119 c
h
38 119 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1179 711 m
1278 711 l
1282.9706 711 1287 715.02942 1287 720 c
1287 774 l
1287 778.97058 1282.9706 783 1278 783 c
1179 783 l
1174.0294 783 1170 778.97058 1170 774 c
1170 720 l
1170 715.02942 1174.0294 711 1179 711 c
h
1179 711 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 87.5 83 cm
/F2.1[ 9 0 0 -9 0 0]sf
-53.5 -22 m
(,-./0&\(1'2'0&\(3#04\(520678\(9)[ 5.115234 5.115234 5.115234 2.267578 2.267578 4.776855 2.236816 4.706543 3.111328 4.948242 3.111328 2.267578 4.776855 2.236816 4.460449 5.115234 2.267578 5.115234 2.236816 7.866211 4.948242 2.267578 5.115234 2.983887 3.019043 2.236816 0.000000 ] xS
/Cs1 SC
0.13725001 0.36862999 0 sc
/F3.1[ 9 0 0 -9 0 0]sf
-53.5 -11 m
(!)s
0.70196003 0.26666999 0 sc
-48.591309 -11 m
(")s
0.7019608 0.26666668 0 sc
-45.071289 -11 m
(#$%&'\(\)*+,)[ 7.787109 4.763672 3.142090 5.080078 5.080078 5.080078 5.761230 3.124512 3.133301 0.000000 ] xS
/Cs2 SC
0 sc
/F2.1[ 9 0 0 -9 0 0]sf
-53.5 0 m
(\(\(\(\(5%':#4;78<)[ 2.236816 2.236816 2.236816 2.236816 7.866211 4.759277 3.111328 5.115234 5.115234 5.115234 5.752441 2.983887 3.019043 0.000000 ] xS
/Cs1 SC
0.13725491 0.36862746 0 sc
/F3.1[ 9 0 0 -9 0 0]sf
-53.5 11 m
(!!)[ 4.908691 0.000000 ] xS
0.13725001 0.36862999 0 sc
-43.682617 11 m
(#$%&'\(-*+,)[ 7.787109 4.763672 3.142090 5.080078 5.080078 5.080078 5.752441 3.124512 3.133301 0.000000 ] xS
/Cs2 SC
0 sc
/F2.1[ 9 0 0 -9 0 0]sf
-53.5 22 m
(=)s
/Cs1 SC
1 1 1 sc
CM
219.125 155 m
350.75 155 l
360.875 155 360.875 155 360.875 146 c
360.875 150.5 l
365.9375 150.5 365.9375 150.5 365.9375 141.5 c
365.9375 146 l
371 146 371 146 371 137 c
371 20 l
371 11 371 11 360.875 11 c
229.25 11 l
219.125 11 219.125 11 219.125 15.5 c
214.0625 15.5 214.0625 15.5 214.0625 20 c
209 20 209 20 209 29 c
209 146 l
209 155 209 155 219.125 155 c
h
219.125 155 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1360.125 675 m
1491.75 675 l
1501.875 675 1501.875 675 1501.875 684 c
1501.875 801 l
1501.875 810 1501.875 810 1491.75 810 c
1360.125 810 l
1350 810 1350 810 1350 801 c
1350 684 l
1350 675 1350 675 1360.125 675 c
1501.875 679.5 m
1506.9375 679.5 1506.9375 679.5 1506.9375 688.5 c
1506.9375 810 l
1506.9375 814.5 1506.9375 814.5 1496.8125 814.5 c
1365.1875 814.5 l
1355.0625 814.5 1355.0625 814.5 1355.0625 810 c
1506.9375 684 m
1512 684 1512 684 1512 693 c
1512 810 l
1512 819 1512 819 1501.875 819 c
1370.25 819 l
1360.125 819 1360.125 819 1360.125 814.5 c
S
0 i
1 0 0 -1 290 83 cm
/F2.1[ 14 0 0 -14 0 0]sf
-72.760002 -49.119999 m
(!"#$%&'\(*)[ 8.968750 4.662109 7.957031 3.623047 7.403320 7.430664 4.839844 3.479492 0.000000 ] xS
/F2.1[ 10 0 0 -10 0 0]sf
-15.331289 -44.119999 m
(>?*@)[ 7.133789 5.844727 6.474609 0.000000 ] xS
1 1 1 sc
CM
236 119 m
335 119 l
339.97055 119 344 114.97057 344 110 c
344 56 l
344 51.029438 339.97055 47 335 47 c
236 47 l
231.02943 47 227 51.029438 227 56 c
227 110 l
227 114.97057 231.02943 119 236 119 c
h
236 119 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1377 711 m
1476 711 l
1480.9706 711 1485 715.02942 1485 720 c
1485 774 l
1485 778.97058 1480.9706 783 1476 783 c
1377 783 l
1372.0294 783 1368 778.97058 1368 774 c
1368 720 l
1368 715.02942 1372.0294 711 1377 711 c
h
1377 711 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 285.5 83 cm
/F2.1[ 9 0 0 -9 0 0]sf
-53.5 -22 m
(,-./0&\(1'2'0&\(3#04\(520678\(9)[ 5.115234 5.115234 5.115234 2.267578 2.267578 4.776855 2.236816 4.706543 3.111328 4.948242 3.111328 2.267578 4.776855 2.236816 4.460449 5.115234 2.267578 5.115234 2.236816 7.866211 4.948242 2.267578 5.115234 2.983887 3.019043 2.236816 0.000000 ] xS
/Cs1 SC
0.69411767 0 0.10980392 sc
/F3.1[ 9 0 0 -9 0 0]sf
-53.5 -11 m
("""#$%&'\(\)*+,)[ 3.520020 3.520020 3.520020 7.787109 4.763672 3.142090 5.080078 5.080078 5.080078 5.761230 3.124512 3.133301 0.000000 ] xS
/Cs2 SC
0 sc
/F2.1[ 9 0 0 -9 0 0]sf
-53.5 0 m
(\(\(\(\(5%':#4;78<)[ 2.236816 2.236816 2.236816 2.236816 7.866211 4.759277 3.111328 5.115234 5.115234 5.115234 5.752441 2.983887 3.019043 0.000000 ] xS
-53.5 11 m
(=)s
/Cs1 SC
1 1 1 sc
CM
218 65 m
218 88.400002 l
182 88.400002 l
182 101 l
146 76.699997 l
182 52.400002 l
182 65 l
h
218 65 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1141 830 cm
1359 765 m
1359 741.59998 l
1323 741.59998 l
1323 729 l
1287 753.29999 l
1323 777.59998 l
1323 765 l
h
1359 765 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 182 76.699997 cm
/F2.1[ 12 0 0 -12 0 0]sf
-25.447266 5 m
(\(\(\(A#6B/0&')[ 2.982422 2.982422 2.982422 7.599609 6.820312 6.820312 4.142578 3.023438 3.023438 6.369141 0.000000 ] xS
ep
end
%%Trailer
%%EOF
