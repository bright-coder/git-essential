%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 578.000000 373.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 578 373
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 578 373
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Roboto-Regular
%!FontType1-1.0: Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /p put
dup 34 /u put
dup 35 /l put
dup 36 /c put
dup 37 /o put
dup 38 /m put
dup 39 /i put
dup 40 /t put
dup 41 /s put
dup 42 /h put
dup 43 /n put
dup 44 /e put
dup 45 /a put
dup 46 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/a 1 def
/c 2 def
/d 3 def
/e 4 def
/h 5 def
/i 6 def
/l 7 def
/m 8 def
/n 9 def
/o 10 def
/p 11 def
/s 12 def
/t 13 def
/u 14 def
/ogonek 15 def
/U.smcp 16 def
/Uogonek.smcp 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4247813 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF8582693441BFA40888AF905FF75E47F70DE4CD49D4BBBBBA99C8B9C05B033FB8DE22D7D3FF19D06CB555A6AC06A365378D4943652CD0F3F51165FA5F08A351EFEDF345EDCFEF3C151F56CCA897DB8A76B981826ACAA4953845657FC886AFB7954652165B24D29CC6A5C2ABDC33FA3509F82D4E5880931B18355702DF927A4A1E5C8FC4F4E7EDA3497DBBCD67AFCB8FFE30EF9774395212587B5ABB98C35CD445CF73D94861298C5383978B23F07A813F152547C9175258395C74E457EC92F17F85C94F0DA517C0816D1AD249DF38EF57DFD104836CCAE83D1D2851C47DD17E9DEEB8526F20E6547A6F6629AD7F1EE8DA35FDF231F5AA026613440DB10F823700B79BE3D2851475E8D3E40CE29BB6A19FB24629E32F90341C000CB74734D53CAF02DB2F460E8D9781D7809737D475BA5DCED3D4479C9AEC08BF483C31695EB73F863B105BB1E3D9C10B72B1DB2FDE697CA17CE181EFDEB26C3A11D6F567D529D68D6A95E1DE389A822AC2F46373B4471E6624FF9602BC38F12A3495F22E73B8470F90207570F74DFE9B86B2974F364FA79128522FAF1BE9FB5F28392F432AB4CBF58E3DD1967B3E711784B271AEDEA93363093F03152D7DC1E1C3D7420CD2F779DEA40B03A873C4242692877E3F67392A4E0E134D70D7B977547E6B5349603806B1AC0B530B05BD1B7CAAC162AE02F7F809EE454D803F2F2C8A58E0C30F1D8D05143F9C84A5CD5A050DFB703C15908186740A153C1C68C96D1E596316D358BCA8F283BB9ED0F6EB0B81DB79D6059CC6968BFA7CB4AF8EC2F
2821446360ED989CF74B9EDC057D66E7FD560DCC507B746B4046DABF62A37786E11A847AB9A27A0877B0FB3AF206DA21BA38E441082AAF0BEA43A40414B59967824527C1626391C38A669547C1E8E71A8F287836515498FDB20249F0A01336164B3FA43BDFE32ACE1ADCD145E0997D6AE88A3EBB94E654DCCC35EE07D6346489FDB35B337F8224494A9FC72FEB869BBB7174F597DB0018B9CD30E536C724782DAC3F50BF63E3F4267A8B08AF34B77B679E1E316B7020C5562C09836ED89B85200EE41BA33091DF5F07A651D8B42E933AD0DB5F3336667E864DB2D74DDD062F9E58EDCEE0375438A9FC4126CD45CACD2DE8F4EAAE73D46026146159EADC82EFC5B92B0B7976E1AA480FF59CB219CFE1CD4807D2F12583F7BF4D6F9EF8A91F5E608730D5D16D5B19ACCC1207A2DEF7905233CAFEED23934DE40FA9339D8FA24B4720462F1568C92C32EACEAFF1AA8AC661A5049FAA88DF305A80334E9033873F616A3FCF10CCAAF8437ED0A55A217817413E64C363536583E7A17BBD2D33182D3DFCBB9722F615DDB1970C7A55AF6F4253368506A0E781805C949A33EB18EB9949F8C6757E1D1AD56C7DC6FE5840822D4FC22FC80C31661DC9F9409A1F6DE0BC1DBB60D318AA0547C1C5D261506445F22FEE097476435C0FAF1ADF7E1D9E0C3003C59808F4CDC5C9441D3295FAE5C82F279F57E2229D2E59209A788532E49F92AD64F8CA74E90AFEA667CE27358EC0DFF35A375289305FBEDE8B96DB1E4879C27EBF38CADA617B92B2F9C2C2178AF99A22E6C8887A7416ABE160D61864319C993B666C2D9F3A26A98C10442F135EAB6140F03449C51FFD77DE27957E441B2C1E6CDF93DFDD02C739FA8D07D531BB82099953B3F97073B49FCC5E0DA2ED918F3ADE80AF3081A42C45107402343A8726B4269000C1A59C87F9CE63F7CCA90CC89BE2F0A1933C26AD8C0CC7AB4DED6F5766D7AED2CA82E3EC91B569641BAD2A7FB2D2AF3AE6509034711D03DD332AD5E225B502D23AA202F90DD191C704FF5197F44C8ECA2695DE27113EE022F30DED484A8A4AC5BF71ACB2468CC2BABD0051B43B8D24E8D979D18484CDC82532FE45036D20001585C37338C3A58BC60ED07A8856676B11E448F06039145C8107F0F12A7AE8E5E82AD78CD9D1331CCF166AB37F365FCCADEB59D919991478DBAB991B443CC38F16D511244EDF8AC5CDFA230606A72872A28AEEA71BD843F8D8C25F036B83306E706454C7D4FC4AD4285CE581DA67AFF483D233135C16DFE023D3B2B48692662BE640E5A325528DC4DE7D1AE065CA763F31043BAD870D9BCD30E0F482CCF2E45C511FA6430E8E489344450EE859006534C8ADF631A3239B3C364E22C1D4C1C3EC8946EBF6FAB1370B3AEB29BEE4C0B63ACDEE28EA85DC3FA93935CB656640F8BEAABB8353831C423ABB540DFFA694FA
D96A9C688E6D77DD951FA18830053058902A3CB18BB3C62347DE4EAFEC619CEBD69789F43D45AFAB1717869FC950EF22A871F0800F5A3CAE940CF48B8B65A843B333BBCBB7EBD9A52E35CC059C762576FC4AD858A183170B44B766727A8FBA794ADBD6CC8D82EFCC31CA596B85A82C0EA802799CDF2A6646860C26F6E68BA7BFB85D5D90CB09E07B561EF3832EC74AE7FF77037E16EE8D28FD5725DDDB877F29AC8B62DA366FF573FAE6D280B5FDA4C481B39E6195BB66A15EDA7E09824749D13D89078FF1C471824D8DB0DDBEBCDC9F49FEDE5B3D1E283B1404BBB19866A6F537209E85CDABF27ECBE4B9212CC0E85118DB44E8A6833A312A58CCFF73156FBCB70319880638E9E00E1AE7E71856396838E6967A1CAF85AEBB875E82A299B0AAD2F4B16602192E3FAFA101808F689B45ED931F896B157CF6668BB5CF966A03E5421AA0F1690F45A9A5406B98014DFFE0963E1A20A04FE1080C36B1819EB6FE500CB216DDEB368C53FC2B174BFA3C3807BD95CC79EE4113E89B915DA71575EE64931F817655294EF1B2472FABDB043B973AB4257BEE54165EDD75958AAE527D5EAEE182B7A44CEB4C11B55740B27C88071D9FFF70F9F5F752251B4BA666AF83BE91CA257A1046BDFA1872F8FEBF47FE00793C8C37FD95D2DCBC0BF6B155CAE181C561B75A6199B49544DCE4E75FA9BFA8847AA21935B79CF71DCDFA9F5DDEB2F8E70422A67D918CE40012BA643DD08E01F271A704BFEE6C8D79CB5D0C8A929D46A562DE75D1B2735C05EE51D77FC1F926901FE7573D4D0A3C9C4DDF65CFBAD98E8E7AC8A7C37C25A876E3E3C8CDFC3282BA862CF0F39C7AE8093A44525C8F3F19C4DC31B48B2A047C0EE623C70560EB38470D81A6B4A689A7A38D2A331E13394A5BBBAAB9C73CA156B1DD7BD0377E018A87D3F40DE082DDD293E9F24BFBD4F4B1BA8F8B67157CA1A42C4C47B879BC5C5B7D92C71358B22B383B997FE81894F9AE0EEB780031AA3FBB250B058A4C0879D0E3CDC1BE73826116879B628F2DEC1F610222AA20717F7D60151D50D5F7D2B40418F64862CEB41FE090AF964777122F0EB0F0F6AF1E9131F5D1B00F54B61C34B3B886EC682E1AF930C20761D93709EA6785E0686DBD8CCD6289833ED8F5CA22F21E9676DAB990789AF5EA7B10CF782589B8A1E4D6C07029F64B8AC6671831C57F51208D9822049928B07652D2A041B7468E7AFE3A7C1D6357BEC5B5F110E1B70E64EE684D5460A3DF7811DE0E60E268FA7A9722D8ED5CC1986880FCB7B238F544C578E702C7438D3299F560BB0C57E6C59FCAC4E7198047495CCE96EAE8702328DC4556B49E2D8A06BAA48D7D7886B7600B771FC20C86194F89398AF99B971A604824EF9C0C58AFEFEC63552322
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Roboto-Regular cguidfix
/F1.1/Roboto-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /n put
dup 34 /e put
dup 35 /w put
dup 36 /space put
dup 37 /r put
dup 38 /p put
dup 39 /o put
dup 40 /x put
dup 41 /i put
dup 42 /s put
dup 43 /t put
dup 44 /c put
dup 45 /a put
dup 46 /fi put
dup 47 /l put
dup 48 /k put
dup 49 /d put
dup 50 /u put
dup 51 /m put
dup 52 /b put
dup 53 /slash put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70001FFEFFFF0015F02DB0003000B00B800002FB800012F3031090133010116FED948012802DBFD1502EB000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000020043FFF5022D02CA0018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA




00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/a 3 def
/b 4 def
/c 5 def
/d 6 def
/e 7 def
/i 8 def
/k 9 def
/l 10 def
/m 11 def
/n 12 def
/o 13 def
/p 14 def
/r 15 def
/s 16 def
/t 17 def
/u 18 def
/w 19 def
/x 20 def
/fi 21 def
/uni2B91 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec


5680ECE7D37591269AE346E83D2AA12872C50F65D5DEEF6C55B76B756BD289B7FB8068B13D781CF1781785492D1AD850A7B8A8F20383021D195B626C2D868AD8443FE8D5E4A639FA8CC587CE2E285FD9F3262FE46A0BEF13715635418A7A98DCBCBB896387C1984CF2082EEEC11C9EF04C17126832A3518B4063648F1B2C37501F625A657AF8B02234669D31FFCF27C7DCD87D09183C220038A0242B55EA6FC4C1CEEF5179FF5472C292A72BC4348AF848B625A69DC90A9608515AE22D10D5D35134563BF3F070F862EF294310DCF679EF86F0A9C1776DEC487D9EC75D109B7AF9C2E399DB9C18ED41A36CA56F6CAB5B420861E58CAE3AC930721FA5A8D9B1BE8521096A0C53AA1E04C508DC46AEE838A1BEFBBA5A5A443478A19F67B973890ABD3CDE12418047EB420D7AA1B3F06F5B91D33D4DDF2C41DFE30EFFF773AA98B052DF93A8C16C4DA8ADCFA6418C1A78EBE21FC368C3BF2276B68EDB98432FBF1B3C0E6A1190D4E8FA5CB63EBC81EB5F56E7A75EC0C172906E8CD3BE3A008190263EE3A5BA760ED71B5EBB0C7A9A5B628C2344A5A5EDA631B11D584BF18C8C8FBD26931CD829CF844FF4B1CF07E4B5C4D38B5926E7795CCA5D7C17462F513F3F0200539090D6CD949010ED6FF7266E8CDD37E43E2414FDBE9A2CBC56D6A0EC1F2C8F37B7716831814A71548418E9C930636DD1C56B39D73B8C4F5A00715E3A2719DE0DEF13DCDF335F6748DEBEA8564B764F55E6FC3A65B9645F1E0DC6CFD26E5AD9772ADADA9F6EA789B80F738B3823690E8E42DA703D8A9878B2AF1A994A7253D2099E58C4BCB8E6477CF6A365BA706210F318A78396AE073B769D65E1A50797D661EBA0BFFFA474AC52010B8A9158DA8A4CA38F1373477FD3B2B3E645771C7466BD3CDD0A09073F91100551AC6EE722404ADD3043D00406C556CB751C714EEE50148EE29FA12C4AE588C07E7E620EE7E7D78086F770A81E9975DCE5749673BB9A15BE7ED8E632F5540C75BE81F69CB23E5BE8D4A5B8BE82912C3B9703B95340D4F9718E0BEB84CAD4A699536A0CBDBEBB910D9F99637BAFA36C75D53B70211476B49DA280C312CDD0E055B41E9EA051D2D78C2E5346E759FAFBF977023E3B5403B66DA5AB7DEEF47774436B8FD8EAFFEF60C599A5E7F78AC73B7AB8A0E3E793582E8DA1DE1F148977ED57B3D42AE2680B46552D773DAA27202B45D336C77F41328CA881BCF74D16739C74F2F776B73CFF67A054ED646A234D3143EFFDABFA5ADBE380E092DF6B8169A9A60BC19E1012FF544B1085CB6F8A360BC780A60C5900875A4AD778FCDF24B3ABFDC7AE14CD603B39A77520317AC44E26B63F93B13B7D74863FCA29282293A69B11CAF7D370ADC75A3D05BC4A604914FDFDC9A43E9EE324BB54DFAF0488033B3423981D6A5E7BA0CF2DA06325C7D24CD2F1CEC189170F

332EB64497298D9DCF4398DFC235E450FC3D837E2BFC25DC7021D29D2F23A0CB1B62DA436BC886C73C55316A6014EE2361D7DDA0BACC0BACD75B29
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 578 373 rc
-97 2063 m
683 2063 l
683 -61 l
-97 -61 l
h
-97 2063 m
f
0.85490197 0.85490197 0.85490197 sc
543.45581 243.45581 m
557.51477 229.39696 557.51477 206.60304 543.45581 192.54419 c
529.39697 178.48524 506.60306 178.48524 492.54419 192.54419 c
478.48526 206.60304 478.48526 229.39696 492.54419 243.45581 c
506.60306 257.51474 529.39697 257.51474 543.45581 243.45581 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
640.45581 1819.5442 m
654.51477 1833.603 654.51477 1856.397 640.45581 1870.4558 c
626.39697 1884.5148 603.60303 1884.5148 589.54419 1870.4558 c
575.48523 1856.397 575.48523 1833.603 589.54419 1819.5442 c
603.60303 1805.4852 626.39697 1805.4852 640.45581 1819.5442 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 518 218 cm
/F1.1[ 18 0 0 -18 0 0]sf
-14.765625 7 m
(!"##)[ 10.230469 10.230469 4.535156 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
427.00174 347.50174 m
446.33279 328.17081 446.33279 296.82919 427.00174 277.49826 c
407.67081 258.16721 376.32919 258.16721 356.99826 277.49826 c
337.66721 296.82919 337.66721 328.17081 356.99826 347.50174 c
376.32919 366.83279 407.67081 366.83279 427.00174 347.50174 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
524.00177 1715.4983 m
543.33276 1734.8292 543.33276 1766.1708 524.00177 1785.5017 c
504.67081 1804.8328 473.32919 1804.8328 453.99826 1785.5017 c
434.66721 1766.1708 434.66721 1734.8292 453.99826 1715.4983 c
473.32919 1696.1672 504.67081 1696.1672 524.00177 1715.4983 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 392 312.5 cm
-31.003418 7 m
($%&&'\()[ 9.553711 10.230469 15.732422 15.732422 4.535156 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
417.45581 135.45581 m
431.51474 121.39695 431.51474 98.60305 417.45581 84.544182 c
403.39694 70.485245 380.60306 70.485245 366.54419 84.544182 c
352.48526 98.60305 352.48526 121.39695 366.54419 135.45581 c
380.60306 149.51476 403.39694 149.51476 417.45581 135.45581 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
514.45581 1927.5442 m
528.51477 1941.603 528.51477 1964.397 514.45581 1978.4558 c
500.39694 1992.5148 477.60306 1992.5148 463.54419 1978.4558 c
449.48526 1964.397 449.48526 1941.603 463.54419 1927.5442 c
477.60306 1913.4852 500.39694 1913.4852 514.45581 1927.5442 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 392 110 cm
-20.052246 7 m
(!"\)*)[ 10.230469 10.230469 9.413086 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -97 2063 cm
263.71848 1773.2855 m
291.24152 1774.8916 311.15567 1791.4021 325.99533 1808.6306 c
S
0 i
CM
234.06496 248.17651 m
231.31874 256.26715 l
226.67603 252.46648 l
h
234.06496 248.17651 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
331.06494 1814.8235 m
328.31876 1806.7329 l
323.67603 1810.5336 l
h
331.06494 1814.8235 m
S
1 J
1 j
0.60000002 i
364.44443 1810.541 m
376.4686 1784.3185 397.65839 1761.9948 429.8681 1752.8416 c
S
0 i
CM
340.65079 311.99518 m
332.1756 313.07745 l
333.55377 307.23785 l
h
340.65079 311.99518 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
437.65079 1751.0048 m
429.1756 1749.9226 l
430.55377 1755.7621 l
h
437.65079 1751.0048 m
S
1 J
1 j
0.60000002 i
538.4668 1752.3184 m
567.01831 1757.5974 586.94647 1771.9999 600.85583 1801.3857 c
S
0 i
CM
507.02594 254.27011 m
506.60986 262.80399 l
501.10114 260.42615 l
h
507.02594 254.27011 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
604.02594 1808.7299 m
603.60986 1800.196 l
598.10114 1802.5739 l
h
604.02594 1808.7299 m
S
1 J
1 j
0.60000002 i
607.24536 1880.1594 m
593.1098 1918.8818 563.74854 1938.0094 534.3833 1946.6752 c
S
0 i
CM
429.63443 114.32561 m
438.13025 113.41935 l
436.63129 119.22909 l
h
429.63443 114.32561 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
526.63446 1948.6744 m
535.13025 1949.5807 l
533.63129 1943.7709 l
h
526.63446 1948.6744 m
S
1 J
1 j
0.60000002 i
453.32703 1948.1443 m
402.12411 1937.9393 378.52097 1916.4675 366.13852 1889.1884 c
S
0 i
CM
266.15311 181.23627 m
266.35425 172.69463 l
271.92105 174.93303 l
h
266.15311 181.23627 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
363.15311 1881.7638 m
363.35425 1890.3054 l
368.92105 1888.067 l
h
363.15311 1881.7638 m
S
0.85490203 0.85490203 0.85490203 sc
CM
157.77383 307.77383 m
170.07541 295.47232 170.07541 275.52768 157.77383 263.22617 c
145.47234 250.92459 125.52766 250.92459 113.22616 263.22617 c
100.92459 275.52768 100.92459 295.47232 113.22616 307.77383 c
125.52766 320.07541 145.47234 320.07541 157.77383 307.77383 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
254.77383 1755.2262 m
267.07541 1767.5277 267.07541 1787.4723 254.77383 1799.7738 c
242.47234 1812.0754 222.52766 1812.0754 210.22617 1799.7738 c
197.92459 1787.4723 197.92459 1767.5277 210.22617 1755.2262 c
222.52766 1742.9246 242.47234 1742.9246 254.77383 1755.2262 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 135.5 285.5 cm
-12.761719 7 m
('+'\()[ 4.535156 10.230469 4.535156 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
157.77383 172.77383 m
170.07541 160.47234 170.07541 140.52766 157.77383 128.22617 c
145.47234 115.92459 125.52766 115.92459 113.22616 128.22617 c
100.92459 140.52766 100.92459 160.47234 113.22616 172.77383 c
125.52766 185.07541 145.47234 185.07541 157.77383 172.77383 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
254.77383 1890.2262 m
267.07541 1902.5277 267.07541 1922.4723 254.77383 1934.7738 c
242.47234 1947.0754 222.52766 1947.0754 210.22617 1934.7738 c
197.92459 1922.4723 197.92459 1902.5277 210.22617 1890.2262 c
222.52766 1877.9246 242.47234 1877.9246 254.77383 1890.2262 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 135.5 150.5 cm
/F1.1[ 14 0 0 -14 0 0]sf
-17.137695 5.5 m
($#%+,)[ 7.430664 3.527344 7.957031 7.957031 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -97 2063 cm
263.99683 1912.0511 m
294.11148 1908.8549 310.4837 1897.1282 325.17029 1880.7155 c
S
0 i
CM
233.35411 188.37816 m
225.88541 184.22864 l
230.45546 180.34088 l
h
233.35411 188.37816 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
330.3541 1874.6218 m
322.88541 1878.7714 l
327.45547 1882.6591 l
h
330.3541 1874.6218 m
S
0.85490203 0.85490203 0.85490203 sc
CM
282.45581 243.45581 m
296.51474 229.39696 296.51474 206.60304 282.45581 192.54419 c
268.39694 178.48524 245.60304 178.48524 231.54419 192.54419 c
217.48524 206.60304 217.48524 229.39696 231.54419 243.45581 c
245.60304 257.51474 268.39694 257.51474 282.45581 243.45581 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
379.45581 1819.5442 m
393.51474 1833.603 393.51474 1856.397 379.45581 1870.4558 c
365.39694 1884.5148 342.60306 1884.5148 328.54419 1870.4558 c
314.48526 1856.397 314.48526 1833.603 328.54419 1819.5442 c
342.60306 1805.4852 365.39694 1805.4852 379.45581 1819.5442 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 257 218 cm
/F1.1[ 18 0 0 -18 0 0]sf
-15.178711 7 m
(-..)[ 9.896484 10.230469 0.000000 ] xS
/Cs1 SC
0 0 0 sc
CM
33.204941 225.95494 m
37.598358 221.56155 37.598358 214.43845 33.204941 210.04506 c
28.811548 205.65164 21.688452 205.65164 17.295057 210.04506 c
12.90164 214.43845 12.90164 221.56155 17.295057 225.95494 c
21.688452 230.34836 28.811548 230.34836 33.204941 225.95494 c
f
0.60000002 i
1 0 0 -1 -97 2063 cm
130.20494 1837.045 m
134.59836 1841.4385 134.59836 1848.5615 130.20494 1852.955 c
125.81155 1857.3484 118.68845 1857.3484 114.29506 1852.955 c
109.90164 1848.5615 109.90164 1841.4385 114.29506 1837.045 c
118.68845 1832.6516 125.81155 1832.6516 130.20494 1837.045 c
S
127.24758 1834.9176 m
146.55513 1798.2998 168.20583 1783.3256 191.22899 1778.3468 c
S
0 i
CM
102.13064 285.89642 m
93.761589 287.61661 l
94.694115 281.68951 l
h
102.13064 285.89642 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
199.13065 1777.1035 m
190.7616 1775.3834 l
191.69412 1781.3104 l
h
199.13065 1777.1035 m
S
1 J
1 j
0.60000002 i
126.08016 1855.5808 m
144.25626 1901.8062 169.09726 1912.5142 191.13898 1913.9133 c
S
0 i
CM
102.13535 149.02042 m
94.160469 152.08659 l
94.110764 146.08681 l
h
102.13535 149.02042 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
199.13535 1913.9796 m
191.16048 1910.9135 l
191.11076 1916.9132 l
h
199.13535 1913.9796 m
S
/Cs2 SC
0 sc
1 0 0 -1 42 278.5 cm
/F2.1[ 10 0 0 -10 0 0]sf
-20.74 3.8600006 m
(!"#$%"&')[ 5.560000 5.370000 7.580000 2.780000 3.150000 5.370000 5.930000 0.000000 ] xS
1 0 0 -1 38.5 148.5 cm
-24.445 3.8600006 m
(%"&'$"\(\)*+*)[ 3.150000 5.370000 5.930000 5.740000 2.780000 5.370000 5.180000 2.220000 5.000000 3.150000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -97 2063 cm
481.34018 1799.4072 m
466.05191 1840.02 430.56583 1848.8484 399.69202 1849.0385 c
S
0 i
CM
294.69724 214.1357 m
302.63 210.96217 l
302.76068 216.96075 l
h
294.69724 214.1357 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
391.69724 1848.8643 m
399.63 1852.0378 l
399.76068 1846.0393 l
h
391.69724 1848.8643 m
S
1 1 1 sc
CM
331.40988 49.409885 m
340.19672 40.623096 340.19672 26.376905 331.40988 17.590115 c
322.62311 8.8032799 308.37689 8.8032799 299.59012 17.590115 c
290.80328 26.376905 290.80328 40.623096 299.59012 49.409885 c
308.37689 58.19672 322.62311 58.19672 331.40988 49.409885 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
428.40988 2013.5901 m
437.19672 2022.377 437.19672 2036.623 428.40988 2045.4099 c
419.62311 2054.1968 405.37689 2054.1968 396.59012 2045.4099 c
387.80328 2036.623 387.80328 2022.377 396.59012 2013.5901 c
405.37689 2004.8032 419.62311 2004.8032 428.40988 2013.5901 c
S
0 i
1 1 1 sc
CM
328.22791 46.227909 m
335.25739 39.198475 335.25739 27.801523 328.22791 20.772093 c
321.19849 13.742624 309.80151 13.742624 302.77209 20.772093 c
295.74261 27.801523 295.74261 39.198475 302.77209 46.227909 c
309.80151 53.257378 321.19849 53.257378 328.22791 46.227909 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -97 2063 cm
425.22791 2016.7721 m
432.25739 2023.8015 432.25739 2035.1985 425.22791 2042.2279 c
418.19849 2049.2573 406.80151 2049.2573 399.77209 2042.2279 c
392.74261 2035.1985 392.74261 2023.8015 399.77209 2016.7721 c
406.80151 2009.7427 418.19849 2009.7427 425.22791 2016.7721 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 210.59157 294.46674 cm
-24.165001 3.8600006 m
(,%"-+"$./"*)[ 5.370000 3.150000 5.370000 5.370000 3.150000 5.370000 2.780000 5.180000 2.220000 5.370000 0.000000 ] xS
1 0 0 -1 292.5 314.5 cm
-22.045 3.8600006 m
(+-*0$1'!")[ 3.150000 5.370000 5.000000 5.190000 2.780000 5.930000 5.740000 5.560000 0.000000 ] xS
1 0 0 -1 359.5 211.5 cm
-16.110001 3.8600006 m
("1\)+$./")[ 5.370000 5.930000 2.220000 3.150000 2.780000 5.180000 2.220000 0.000000 ] xS
1 0 0 -1 525.5 305.5 cm
-38.075001 3.8600006 m
(2&1-+"$2&*+%"-3)[ 5.560000 5.930000 5.930000 5.370000 3.150000 5.370000 2.780000 5.560000 5.930000 5.000000 3.150000 3.150000 5.370000 5.370000 0.000000 ] xS
1 0 0 -1 509.5 125.5 cm
-22.23 3.8600006 m
(*"!1$4/'4)[ 5.000000 5.370000 5.560000 5.930000 2.780000 5.930000 2.220000 5.740000 0.000000 ] xS
1 0 0 -1 297 110 cm
-26.67 3.8600006 m
(,%"-+"$5$"1\)+)[ 5.370000 3.150000 5.370000 5.370000 3.150000 5.370000 2.780000 3.330000 2.780000 5.370000 5.930000 2.220000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -97 2063 cm
489.41498 1988.9977 m
485.53354 2023.9595 466.98102 2031.8274 444.77673 2032.097 c
S
0 i
CM
339.78278 31.149445 m
347.68652 27.904335 l
347.87143 33.901485 l
h
339.78278 31.149445 m
f
0 J
0 j
1 0 0 -1 -97 2063 cm
436.78278 2031.8506 m
444.68652 2035.0957 l
444.87143 2029.0985 l
h
436.78278 2031.8506 m
S
/Cs2 SC
0 sc
1 0 0 -1 217 139.5 cm
-26.67 3.8600006 m
(,%"-+"$5$"1\)+)[ 5.370000 3.150000 5.370000 5.370000 3.150000 5.370000 2.780000 3.330000 2.780000 5.370000 5.930000 2.220000 0.000000 ] xS
1 0 0 -1 412.5322 40.813114 cm
-11.3 3.8600006 m
(1'!")[ 5.930000 5.740000 5.560000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
